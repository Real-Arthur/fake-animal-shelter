{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/User/EditUserLogs/EditUserSteps.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport ContentEditable from 'react-contenteditable';\n\nfunction EditUserSteps(props) {\n  _s();\n\n  const [status, isEditable] = useState(true); // saves updated step log and toggles back to not editable\n\n  const saveAndToggle = () => {\n    console.log('props', props.store.currentPerson);\n    props.save(props.data);\n    props.reload();\n    unToggle();\n  };\n\n  const unToggle = () => {\n    isEditable(!status);\n  };\n\n  const reload = value => {\n    props.dispatch({\n      type: 'FETCH_LOGS',\n      payload: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(ContentEditable, {\n        className: status ? null : 'editUserStepstd',\n        data: props.data,\n        html: String(props.steps),\n        onChange: props.edit,\n        disabled: props.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [status === false && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => saveAndToggle(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 32\n      }, this), status === true && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => unToggle(),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.delete(props.data),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EditUserSteps, \"RDtitF5FYaTPwPyMoD6BqTcIF9M=\");\n\n_c = EditUserSteps;\nexport default connect(mapStoreToProps)(EditUserSteps);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUserSteps\");","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/User/EditUserLogs/EditUserSteps.js"],"names":["React","useState","connect","mapStoreToProps","ContentEditable","EditUserSteps","props","status","isEditable","saveAndToggle","console","log","store","currentPerson","save","data","reload","unToggle","value","dispatch","type","payload","date","String","steps","edit","delete"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,QAAM,CAACC,MAAD,EAASC,UAAT,IAAuBP,QAAQ,CAAC,IAAD,CAArC,CAD4B,CAG5B;;AACA,QAAMQ,aAAa,GAAG,MAAM;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,KAAK,CAACM,KAAN,CAAYC,aAAjC;AACAP,IAAAA,KAAK,CAACQ,IAAN,CAAWR,KAAK,CAACS,IAAjB;AACAT,IAAAA,KAAK,CAACU,MAAN;AACAC,IAAAA,QAAQ;AACT,GALD;;AAOA,QAAMA,QAAQ,GAAG,MAAM;AACrBT,IAAAA,UAAU,CAAC,CAACD,MAAF,CAAV;AACD,GAFD;;AAIA,QAAMS,MAAM,GAAIE,KAAD,IAAW;AACxBZ,IAAAA,KAAK,CAACa,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAE,YADO;AAEbC,MAAAA,OAAO,EAAEH;AAFI,KAAf;AAID,GALD;;AAOE,sBACE;AAAA,4BACE;AAAA,gBAAKZ,KAAK,CAACgB;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE,QAAC,eAAD;AACE,QAAA,SAAS,EAAEf,MAAM,GAAG,IAAH,GAAU,iBAD7B;AAEE,QAAA,IAAI,EAAED,KAAK,CAACS,IAFd;AAGE,QAAA,IAAI,EAAEQ,MAAM,CAACjB,KAAK,CAACkB,KAAP,CAHd;AAIE,QAAA,QAAQ,EAAElB,KAAK,CAACmB,IAJlB;AAKE,QAAA,QAAQ,EAAEnB,KAAK,CAACC;AALlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE;AAAA,iBACGA,MAAM,KAAK,KAAX,iBAAoB;AAAQ,QAAA,OAAO,EAAE,MAAME,aAAa,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADvB,EAEGF,MAAM,KAAK,IAAX,iBAAmB;AAAQ,QAAA,OAAO,EAAE,MAAMU,QAAQ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAeE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,MAAMX,KAAK,CAACoB,MAAN,CAAapB,KAAK,CAACS,IAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBH;;GA3CQV,a;;KAAAA,a;AA6CT,eAAeH,OAAO,CAACC,eAAD,CAAP,CAAyBE,aAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport ContentEditable from 'react-contenteditable';\n\nfunction EditUserSteps(props) {\n  const [status, isEditable] = useState(true);\n\n  // saves updated step log and toggles back to not editable\n  const saveAndToggle = () => {\n    console.log('props', props.store.currentPerson);\n    props.save(props.data);\n    props.reload()\n    unToggle();\n  }\n\n  const unToggle = () => {\n    isEditable(!status)\n  }\n\n  const reload = (value) => {\n    props.dispatch({\n      type: 'FETCH_LOGS',\n      payload: value\n    })\n  }\n  \n    return (\n      <tr>\n        <td>{props.date}</td>\n        <td>\n          <ContentEditable\n            className={status ? null : 'editUserStepstd'}\n            data={props.data}\n            html={String(props.steps)}\n            onChange={props.edit}\n            disabled={props.status}\n          />\n        </td>\n        <td>\n          {status === false && <button onClick={() => saveAndToggle()}>Save</button>}\n          {status === true && <button onClick={() => unToggle()}>Edit</button>}\n        </td>\n        <td>\n          <button onClick={() => props.delete(props.data)}>Delete</button>\n        </td>\n    </tr>\n  );\n}\n\nexport default connect(mapStoreToProps)(EditUserSteps);"]},"metadata":{},"sourceType":"module"}