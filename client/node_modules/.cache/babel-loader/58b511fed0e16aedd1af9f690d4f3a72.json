{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/User/JoinTeam/JoinTeam.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../../redux/mapStoreToProps'; // import material ui\n\nimport { Button, FormControl, InputLabel, MenuItem, Select, Typography } from '@material-ui/core'; // import sweetalert\n\nimport swal from 'sweetalert'; // import css\n\nimport './JoinTeam.css'; // import logo\n\nimport Logo from '../../../images/PW-hor-logo.png';\n\nclass JoinTeam extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selected_team_id: '',\n      selected_team_image: ''\n    };\n    this.teamsOnlyArray = [];\n\n    this.confirmationJoin = () => {\n      if (this.state.selected_team_id === '') {\n        swal(`Please select a team to join`);\n      } else {\n        this.joinTeam();\n        swal({\n          title: \"Let's get stepping!\",\n          icon: \"success\"\n        }).then(() => {\n          this.props.history.push('/home');\n        });\n      }\n    };\n\n    this.fetchData = async () => {\n      await this.props.dispatch({\n        type: 'FETCH_CAPTAINS_FOR_JOIN'\n      });\n      await this.props.dispatch({\n        type: 'FETCH_TEAMS_FOR_JOIN'\n      });\n    };\n\n    this.handleInputChangeForTeamSelect = async event => {\n      this.teamsOnlyArray = [];\n      await this.setState({\n        selected_team_id: event.target.value\n      });\n      await this.setPhoto();\n    };\n\n    this.joinTeam = () => {\n      this.props.dispatch({\n        type: 'JOIN_TEAM',\n        payload: {\n          selected_team_id: this.state.selected_team_id,\n          user_id: this.props.store.user.id\n        }\n      });\n    };\n\n    this.setPhoto = () => {\n      this.teamsOnlyArray = this.props.store.teamsOnly;\n\n      for (let i = 0; i < this.teamsOnlyArray.length; i++) {\n        if (this.teamsOnlyArray[i].teams_id === this.state.selected_team_id) {\n          this.setState({\n            selected_team_image: this.teamsOnlyArray[i].image_path\n          });\n          return;\n        }\n      }\n    };\n  }\n\n  // Need on load after register to send users contest id to server\n  componentDidMount() {\n    this.fetchData();\n  } // Function is a confirmation function mainly for validation if everything is met and isCorrect then will run joinTeam function\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createPageLogoDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"createPageLogo\",\n          alt: \"playWorksLogo\",\n          src: Logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"teamForm\",\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"Join a Team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"createTeamName\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                style: {\n                  paddingLeft: 14\n                },\n                children: \"Select team by name or captain\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: this.state.selected_team_id,\n                variant: \"outlined\",\n                style: {\n                  width: 300\n                },\n                onChange: this.handleInputChangeForTeamSelect,\n                children: this.props.store.teams.map((team, i) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: team.teams_id,\n                  children: team.name\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"joinTeamImageDiv\",\n            children: this.state.selected_team_image === '' ? '' : /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"joinTeamImage\",\n              alt: \"joinTeamImage\",\n              src: this.state.selected_team_image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            style: {\n              marginTop: '2rem'\n            },\n            size: \"large\",\n            onClick: this.confirmationJoin,\n            children: \"Join Team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createTeamfooter\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn_asLink\",\n          onClick: () => {\n            this.props.history.push('/createorjointeam');\n          },\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn_asLink\",\n          onClick: () => {\n            this.props.history.push('/createteam');\n          },\n          children: \"Create Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn_asLink\",\n          onClick: () => this.props.dispatch({\n            type: 'LOGOUT'\n          }),\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(mapStoreToProps)(JoinTeam);","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/User/JoinTeam/JoinTeam.js"],"names":["React","Component","connect","mapStoreToProps","Button","FormControl","InputLabel","MenuItem","Select","Typography","swal","Logo","JoinTeam","state","selected_team_id","selected_team_image","teamsOnlyArray","confirmationJoin","joinTeam","title","icon","then","props","history","push","fetchData","dispatch","type","handleInputChangeForTeamSelect","event","setState","target","value","setPhoto","payload","user_id","store","user","id","teamsOnly","i","length","teams_id","image_path","componentDidMount","render","paddingLeft","width","teams","map","team","name","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\n// import material ui\nimport { Button, FormControl, InputLabel, MenuItem, Select, Typography } from '@material-ui/core';\n// import sweetalert\nimport swal from 'sweetalert';\n// import css\nimport './JoinTeam.css';\n// import logo\nimport Logo from '../../../images/PW-hor-logo.png';\n\nclass JoinTeam extends Component {\n  state = {\n    selected_team_id: '',\n    selected_team_image: ''\n  };\n\n  // Array scoped for this component\n  teamsOnlyArray = [];\n\n  // Need on load after register to send users contest id to server\n  componentDidMount(){\n    this.fetchData();\n  }\n\n  // Function is a confirmation function mainly for validation if everything is met and isCorrect then will run joinTeam function\n  confirmationJoin = () => {\n    if(this.state.selected_team_id === ''){\n      swal(`Please select a team to join`);\n    }\n    else{\n      this.joinTeam();\n      swal({\n        title: \"Let's get stepping!\",\n        icon: \"success\"\n      })\n        .then(() => {\n        this.props.history.push('/home');\n      });\n    }\n  };\n\n  // function sends two dispatches with async await to fetch captains and teams for join to \n  // list all teams and captains to select from\n  fetchData = async () => {\n    await this.props.dispatch({type: 'FETCH_CAPTAINS_FOR_JOIN'});\n    await this.props.dispatch({type: 'FETCH_TEAMS_FOR_JOIN'});\n  }\n\n  // function empties compontent array teamsOnlyArray, sets state of selected_team_id to the value,\n  // then runs this.setPhoto function\n  handleInputChangeForTeamSelect = async (event) => {\n    this.teamsOnlyArray = [];\n    await this.setState({\n      selected_team_id: event.target.value\n    })\n    await this.setPhoto();\n  };\n\n  // Function sends dispatch to saga and communicates with server for a PUT / Join team.\n  joinTeam = () => {\n    this.props.dispatch({\n      type: 'JOIN_TEAM',\n      payload: {\n        selected_team_id: this.state.selected_team_id,\n        user_id: this.props.store.user.id\n      }\n    });\n  };\n\n  // scoped locally sets teamsOnlyArray to array from store and iterates through the loop\n  // if the id is === to selected_team_id state then it sets state of selected_team_image to image path at that index\n  setPhoto = () => {\n    this.teamsOnlyArray = this.props.store.teamsOnly;\n    for(let i = 0; i < this.teamsOnlyArray.length; i++){\n      if(this.teamsOnlyArray[i].teams_id === this.state.selected_team_id){\n        this.setState({\n          selected_team_image: this.teamsOnlyArray[i].image_path\n        });\n        return;\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className='createPageLogoDiv'>\n          <img className='createPageLogo' alt='playWorksLogo' src= {Logo}/>\n        </div>\n        <div className='teamForm'>\n        <center>\n          <Typography variant='h5'>Join a Team</Typography>\n          <div className='createTeamName'>\n            <FormControl>\n              <InputLabel style={{paddingLeft:14}}>\n                Select team by name or captain\n              </InputLabel> \n              <Select \n                value={this.state.selected_team_id} \n                variant='outlined' \n                style={{width:300}} \n                onChange={this.handleInputChangeForTeamSelect}>\n                  {this.props.store.teams.map((team, i) => \n                    <MenuItem key={i} value={team.teams_id}>{team.name}</MenuItem>\n                  )}\n              </Select>\n            </FormControl>\n          </div>\n          <div className='joinTeamImageDiv'>\n            {this.state.selected_team_image === '' ? \n              ('') : \n              (<img className='joinTeamImage' alt='joinTeamImage' src= {this.state.selected_team_image} />) }\n          </div>\n            <Button variant='contained' \n              color='primary'\n              style={{marginTop: '2rem'}} \n              size= 'large'\n              onClick={this.confirmationJoin}>\n                Join Team\n            </Button>\n          </center>\n        </div>\n        <div className='createTeamfooter'>\n          <button\n            type=\"button\"\n            className=\"btn btn_asLink\"\n            onClick={() => {this.props.history.push('/createorjointeam')}}>\n              Go Back\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn_asLink\"\n            onClick={() => {this.props.history.push('/createteam')}}>\n              Create Team\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn_asLink\"\n            onClick={() => this.props.dispatch({ type: 'LOGOUT' })}>\n              Log Out\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(JoinTeam);"]},"metadata":{},"sourceType":"module"}