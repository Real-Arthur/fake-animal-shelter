{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/Admin/ContestDescriptionPage/AdminContestImagesInfo.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport { Button, Grid, Typography } from '@material-ui/core'; // import sweet alert\n\nimport swal from 'sweetalert';\n\nclass AdminContestImagesInfo extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.confirmationClose = () => {\n      swal({\n        title: \"Are you sure you want to delete this photo?\",\n        text: \"Once deleted it cannot be recovered.\",\n        icons: \"warning\",\n        buttons: true,\n        dangerMode: true\n      }).then(willDelete => {\n        if (willDelete) {\n          swal(\"Photo Successfully deleted!\", {\n            icon: \"success\"\n          });\n          this.deleteItem();\n        } else {\n          swal(\"You're in luck, the photo wasn't deleted!\");\n        }\n      });\n    };\n\n    this.deleteItem = () => {\n      this.props.dispatch({\n        type: 'ADMIN_DELETE_PHOTO',\n        payload: {\n          photo_id: this.props.photo_id,\n          contest_id: this.props.contest_id\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adminContestImageFeedInfo\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          xs: 12,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedAvatarDiv\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"feedAvatar\",\n                src: this.props.avatar,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 9,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"adminFeedDescription\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [this.props.firstName, \" \", this.props.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [this.props.companyName, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: this.props.challenge\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          xs: 12,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"adminDeletePhotoBtn\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"secondary\",\n                onClick: this.confirmationClose,\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(mapStoreToProps)(AdminContestImagesInfo);","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/Admin/ContestDescriptionPage/AdminContestImagesInfo.js"],"names":["React","Component","connect","mapStoreToProps","Button","Grid","Typography","swal","AdminContestImagesInfo","confirmationClose","title","text","icons","buttons","dangerMode","then","willDelete","icon","deleteItem","props","dispatch","type","payload","photo_id","contest_id","render","avatar","firstName","lastName","companyName","challenge"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport { Button, Grid, Typography } from '@material-ui/core';\n\n// import sweet alert\nimport swal from 'sweetalert';\n\nclass AdminContestImagesInfo extends Component {\n  // Created a function that is a validation function that takes in the argument which is the contests id\n  // if willDelete is true will run closeContest and pass contest id as arguement.\n  confirmationClose = () => {\n    swal({\n      title: \"Are you sure you want to delete this photo?\",\n      text: \"Once deleted it cannot be recovered.\",\n      icons: \"warning\",\n      buttons: true,\n      dangerMode: true\n    })\n    .then(willDelete => {\n      if(willDelete){\n        swal(\"Photo Successfully deleted!\",{\n          icon: \"success\",\n        });\n        this.deleteItem();\n      }\n      else {\n        swal(\"You're in luck, the photo wasn't deleted!\");\n      }\n    });\n  };\n\n  // Function deletes individual photo and sends contest id for refetching purposes\n  deleteItem = () => {\n    this.props.dispatch({\n      type: 'ADMIN_DELETE_PHOTO',\n      payload:{\n        photo_id: this.props.photo_id,\n        contest_id: this.props.contest_id\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className='adminContestImageFeedInfo'>\n        <Grid container spacing={1}>\n            <Grid container item xs={12} spacing={3}>\n              <Grid item xs={3}>\n                <div className='feedAvatarDiv'>\n                  <img className='feedAvatar' src={this.props.avatar} alt=\"\"/>\n                </div>\n              </Grid>\n              <Grid item xs={9}>\n                <div className='adminFeedDescription'>\n                  <Typography variant='body2'>{this.props.firstName} {this.props.lastName}</Typography>\n                  <Typography variant='body2'>{this.props.companyName} </Typography>\n                  <Typography variant='body2'>{this.props.challenge}</Typography>\n                </div>\n              </Grid>\n            </Grid>\n            <Grid container item xs={12} spacing={3}>\n              <Grid item xs={12}>\n                <div className='adminDeletePhotoBtn'>\n                  <Button variant=\"contained\" color=\"secondary\" onClick={this.confirmationClose}>\n                    Delete\n                  </Button>\n                </div>\n              </Grid>\n            </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(AdminContestImagesInfo);"]},"metadata":{},"sourceType":"module"}