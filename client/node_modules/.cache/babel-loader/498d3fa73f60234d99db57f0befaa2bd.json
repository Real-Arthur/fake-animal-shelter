{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/Adopt/AdoptionTabs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Button, Tabs, Tab, AppBar } from \"@material-ui/core\";\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport './Adopt.css'; // Holds tabs for animal type selection\n\nfunction AdoptionTabs(props) {\n  _s();\n\n  // Selecting a different tab changes the animal type viewed\n  const [value, setValue] = useState('Cat');\n  const animalTypes = ['Cat', 'Dog', 'Rabbit', 'Snake', 'Hamster', 'Mouse', 'Pig', 'Other']; // starts the fetch saga which gets animals of selected type\n  // from the database\n\n  const handleChange = newValue => {\n    setValue(newValue);\n    props.dispatch({\n      type: 'FETCH_ANIMALS',\n      payload: newValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    children: animalTypes.map((animal, i) => /*#__PURE__*/_jsxDEV(Tabs, {\n      value: value,\n      onChange: handleChange(animal),\n      children: [/*#__PURE__*/_jsxDEV(Tab, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdoptionTabs, \"CcOWUY25GmLEiY21g5dDUVog3fU=\");\n\n_c = AdoptionTabs;\nexport default connect(mapStoreToProps)(AdoptionTabs);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdoptionTabs\");","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/Adopt/AdoptionTabs.js"],"names":["React","useState","connect","Grid","Button","Tabs","Tab","AppBar","mapStoreToProps","AdoptionTabs","props","value","setValue","animalTypes","handleChange","newValue","dispatch","type","payload","map","animal","i"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,GAA7B,EAAkCC,MAAlC,QAAgD,mBAAhD;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAO,aAAP,C,CACA;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAMY,WAAW,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf,EAAyB,OAAzB,EAAkC,SAAlC,EAA6C,OAA7C,EAAsD,KAAtD,EAA6D,OAA7D,CAApB,CAH2B,CAI3B;AACA;;AACA,QAAMC,YAAY,GAAIC,QAAD,IAAc;AACjCH,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACAL,IAAAA,KAAK,CAACM,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAE,eADO;AAEbC,MAAAA,OAAO,EAAEH;AAFI,KAAf;AAID,GAND;;AAOA,sBACE,QAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAAA,cACGF,WAAW,CAACM,GAAZ,CAAgB,CAACC,MAAD,EAASC,CAAT,kBACf,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,KAAb;AAAoB,MAAA,QAAQ,EAAEG,YAAY,CAACM,MAAD,CAA1C;AAAA,8BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAvBQX,Y;;KAAAA,Y;AAyBT,eAAeP,OAAO,CAACM,eAAD,CAAP,CAAyBC,YAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Button, Tabs, Tab, AppBar } from \"@material-ui/core\";\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport './Adopt.css';\n// Holds tabs for animal type selection\nfunction AdoptionTabs(props) {\n  // Selecting a different tab changes the animal type viewed\n  const [value, setValue] = useState('Cat');\n  const animalTypes = ['Cat', 'Dog', 'Rabbit', 'Snake', 'Hamster', 'Mouse', 'Pig', 'Other'];\n  // starts the fetch saga which gets animals of selected type\n  // from the database\n  const handleChange = (newValue) => {\n    setValue(newValue)\n    props.dispatch({\n      type: 'FETCH_ANIMALS',\n      payload: newValue\n    })\n  };\n  return (\n    <AppBar position='static'>\n      {animalTypes.map((animal, i) =>\n        <Tabs value={value} onChange={handleChange(animal)}>\n          <Tab />\n          <Tab />\n        </Tabs>\n      )}\n    </AppBar>\n  );\n}\n\nexport default connect(mapStoreToProps)(AdoptionTabs);"]},"metadata":{},"sourceType":"module"}