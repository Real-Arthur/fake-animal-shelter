{"ast":null,"code":"import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios'; // Function sends post request with rule creation data and refetches rules with 'FETCH_RULES'\n\nfunction* createRulesSaga(action) {\n  yield axios({\n    method: 'POST',\n    url: '/api/rules',\n    data: action.payload\n  });\n  yield put({\n    type: 'FETCH_RULES'\n  });\n}\n\n; // Function sends get request for rules and puts data into reducer listening for 'SET_RULES'\n\nfunction* fetchRulesSaga() {\n  let response = yield axios.get(`/api/rules`);\n  yield put({\n    type: 'SET_RULES',\n    payload: response.data\n  });\n}\n\n;\n\nfunction* rulesSaga() {\n  yield takeLatest('CREATE_RULES', createRulesSaga);\n  yield takeLatest('FETCH_RULES', fetchRulesSaga);\n}\n\n;\nexport default rulesSaga;","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/redux/sagas/rules.saga.js"],"names":["put","takeLatest","axios","createRulesSaga","action","method","url","data","payload","type","fetchRulesSaga","response","get","rulesSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,oBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,UAAUC,eAAV,CAA0BC,MAA1B,EAAkC;AAChC,QAAMF,KAAK,CAAC;AACVG,IAAAA,MAAM,EAAE,MADE;AAEVC,IAAAA,GAAG,EAAE,YAFK;AAGVC,IAAAA,IAAI,EAAEH,MAAM,CAACI;AAHH,GAAD,CAAX;AAKA,QAAMR,GAAG,CAAC;AACRS,IAAAA,IAAI,EAAE;AADE,GAAD,CAAT;AAGD;;AAAA,C,CAED;;AACA,UAAUC,cAAV,GAA0B;AACxB,MAAIC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,YAAX,CAArB;AACA,QAAMZ,GAAG,CAAC;AACRS,IAAAA,IAAI,EAAE,WADE;AAERD,IAAAA,OAAO,EAAEG,QAAQ,CAACJ;AAFV,GAAD,CAAT;AAID;;AAAA;;AAED,UAAUM,SAAV,GAAsB;AAClB,QAAMZ,UAAU,CAAC,cAAD,EAAiBE,eAAjB,CAAhB;AACA,QAAMF,UAAU,CAAC,aAAD,EAAgBS,cAAhB,CAAhB;AACH;;AAAA;AAED,eAAeG,SAAf","sourcesContent":["import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// Function sends post request with rule creation data and refetches rules with 'FETCH_RULES'\nfunction* createRulesSaga(action) {\n  yield axios({\n    method: 'POST',\n    url: '/api/rules',\n    data: action.payload\n  });\n  yield put({\n    type: 'FETCH_RULES',\n  });\n};\n\n// Function sends get request for rules and puts data into reducer listening for 'SET_RULES'\nfunction* fetchRulesSaga(){\n  let response = yield axios.get(`/api/rules`);\n  yield put({\n    type: 'SET_RULES',\n    payload: response.data\n  });\n};\n\nfunction* rulesSaga() {\n    yield takeLatest('CREATE_RULES', createRulesSaga);\n    yield takeLatest('FETCH_RULES', fetchRulesSaga);\n};\n\nexport default rulesSaga;"]},"metadata":{},"sourceType":"module"}