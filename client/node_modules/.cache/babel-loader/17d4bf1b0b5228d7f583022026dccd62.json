{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/Staff/LoginForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport { Grid, Box, TextField, InputLabel, Button, Typography } from \"@material-ui/core\";\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: ''\n    };\n\n    this.login = event => {\n      event.preventDefault();\n\n      if (this.state.username && this.state.password) {\n        this.props.dispatch({\n          type: 'LOGIN',\n          payload: {\n            username: this.state.username,\n            password: this.state.password\n          }\n        });\n        this.props.history.push('/staffhome');\n      } else {\n        this.props.dispatch({\n          type: 'LOGIN_INPUT_ERROR'\n        });\n      }\n    };\n\n    this.handleInputChangeFor = propertyName => event => {\n      this.setState({\n        [propertyName]: event.target.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        backgroundColor: '#EFF7F6'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }, this), this.props.store.errors.loginMessage && /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"alert\",\n            role: \"alert\",\n            children: this.props.store.errors.loginMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"username\",\n            children: [\"Username:\", /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"text\",\n              name: \"username\",\n              required: true,\n              value: this.state.username,\n              onChange: this.handleInputChangeFor('username')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"password\",\n            children: [\"Password:\", /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"password\",\n              name: \"password\",\n              required: true,\n              value: this.state.password,\n              onChange: this.handleInputChangeFor('password')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: this.login,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(mapStoreToProps)(withRouter(LoginForm));","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/Staff/LoginForm.js"],"names":["React","Component","connect","withRouter","mapStoreToProps","Grid","Box","TextField","InputLabel","Button","Typography","LoginForm","state","username","password","login","event","preventDefault","props","dispatch","type","payload","history","push","handleInputChangeFor","propertyName","setState","target","value","render","backgroundColor","store","errors","loginMessage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport { Grid, Box, TextField, InputLabel, Button, Typography } from \"@material-ui/core\";\n\nclass LoginForm extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n      this.props.history.push('/staffhome')\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  }; // end login\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <Box style={{backgroundColor: '#EFF7F6'}}>\n      <Grid container direction=\"column\" alignItems=\"flex-start\">\n      {/* <form className=\"formPanel\" onSubmit={this.login}> */}\n      <Grid item>\n        <Typography variant=\"h6\">Login</Typography>\n        {this.props.store.errors.loginMessage && (\n          <h3 className=\"alert\" role=\"alert\">\n            {this.props.store.errors.loginMessage}\n          </h3>\n        )}\n        </Grid>\n        <Grid item>\n          <InputLabel htmlFor=\"username\">\n            Username:\n            <TextField\n              type=\"text\"\n              name=\"username\"\n              required\n              value={this.state.username}\n              onChange={this.handleInputChangeFor('username')}\n            />\n          </InputLabel>\n        </Grid>\n        <Grid item>\n          <InputLabel htmlFor=\"password\">\n            Password:\n            <TextField\n              type=\"password\"\n              name=\"password\"\n              required\n              value={this.state.password}\n              onChange={this.handleInputChangeFor('password')}\n            />\n          </InputLabel>\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" color=\"primary\" onClick={this.login}>Login</Button>\n          {/* <input className=\"btn\" type=\"submit\" name=\"submit\" value=\"Log In\" /> */}\n        </Grid>\n      {/* </form> */}\n      </Grid></Box>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(withRouter((LoginForm)));\n"]},"metadata":{},"sourceType":"module"}