{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/Admin/CreateContest/CreateContest.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport './CreateContest.css'; // import placeholder image\n\nimport { Button, TextField, Typography } from '@material-ui/core';\n\nclass CreateContest extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      start_date: '',\n      end_date: '',\n      image: ''\n    };\n\n    this.createContest = event => {\n      event.preventDefault();\n      this.props.dispatch({\n        type: 'CREATE_CONTEST',\n        payload: {\n          name: this.state.name,\n          start_date: this.state.start_date,\n          end_date: this.state.end_date\n        }\n      });\n      this.setState({\n        name: '',\n        start_date: '',\n        end_date: ''\n      });\n    };\n\n    this.handleInputChangeFor = propertyName => event => {\n      this.setState({\n        [propertyName]: event.target.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adminCreateContestContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"adminCreateContestHeader\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: '#4d4d4f',\n            fontFamily: 'Poppins'\n          },\n          variant: \"h5\",\n          children: \"Create Contest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"adminContestNameInput\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          style: {\n            width: '100%'\n          },\n          label: \"Contest Name\",\n          variant: \"outlined\",\n          value: this.state.name,\n          required: true,\n          onChange: this.handleInputChangeFor('name')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"adminCreateContestStartEndDates\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"startDate\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"start_date\",\n            children: [\"Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                display: 'block',\n                color: 'rgb(118, 118, 118)',\n                padding: '10px'\n              },\n              type: \"date\",\n              name: \"start_date\",\n              value: this.state.start_date,\n              required: true,\n              onChange: this.handleInputChangeFor('start_date')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"endDate\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"end_date\",\n            children: [\"End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                display: 'block',\n                color: 'rgb(118, 118, 118)',\n                padding: '10px'\n              },\n              type: \"date\",\n              name: \"end_date\",\n              value: this.state.end_date,\n              onChange: this.handleInputChangeFor('end_date')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createContestBtn\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          style: {\n            margin: '.5rem',\n            color: 'white',\n            background: '#054f95'\n          },\n          onClick: this.createContest,\n          children: \"Create Contest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(mapStoreToProps)(CreateContest);","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/Admin/CreateContest/CreateContest.js"],"names":["React","Component","connect","mapStoreToProps","Button","TextField","Typography","CreateContest","state","name","start_date","end_date","image","createContest","event","preventDefault","props","dispatch","type","payload","setState","handleInputChangeFor","propertyName","target","value","render","color","fontFamily","width","display","padding","margin","background"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAO,qBAAP,C,CACA;;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,UAA5B,QAA8C,mBAA9C;;AAEA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCO,KADoC,GAC5B;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,UAAU,EAAE,EAFR;AAGJC,MAAAA,QAAQ,EAAE,EAHN;AAIJC,MAAAA,KAAK,EAAE;AAJH,KAD4B;;AAAA,SASpCC,aAToC,GASnBC,KAAD,IAAW;AACzBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,KAAL,CAAWC,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAE,gBADY;AAElBC,QAAAA,OAAO,EAAE;AACPV,UAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADV;AAEPC,UAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE,UAFhB;AAGPC,UAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG;AAHd;AAFS,OAApB;AAQA,WAAKS,QAAL,CAAc;AACZX,QAAAA,IAAI,EAAE,EADM;AAEZC,QAAAA,UAAU,EAAE,EAFA;AAGZC,QAAAA,QAAQ,EAAE;AAHE,OAAd;AAKD,KAxBmC;;AAAA,SA0BpCU,oBA1BoC,GA0BZC,YAAD,IAAmBR,KAAD,IAAW;AAClD,WAAKM,QAAL,CAAc;AACZ,SAACE,YAAD,GAAgBR,KAAK,CAACS,MAAN,CAAaC;AADjB,OAAd;AAGD,KA9BmC;AAAA;;AAgCpCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE,SAAR;AAAmBC,YAAAA,UAAU,EAAE;AAA/B,WAAnB;AAA8D,UAAA,OAAO,EAAC,IAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,gBAAd;AACE,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR,WADT;AAEE,UAAA,KAAK,EAAC,cAFR;AAGE,UAAA,OAAO,EAAC,UAHV;AAIE,UAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWC,IAJpB;AAKE,UAAA,QAAQ,MALV;AAME,UAAA,QAAQ,EAAE,KAAKY,oBAAL,CAA0B,MAA1B;AANZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAcE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAO,YAAA,OAAO,EAAC,YAAf;AAAA,mDAEE;AACE,cAAA,KAAK,EAAE;AAACQ,gBAAAA,OAAO,EAAE,OAAV;AAAmBH,gBAAAA,KAAK,EAAE,oBAA1B;AAAgDI,gBAAAA,OAAO,EAAE;AAAzD,eADT;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,IAAI,EAAC,YAHP;AAIE,cAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWE,UAJpB;AAKE,cAAA,QAAQ,MALV;AAME,cAAA,QAAQ,EAAE,KAAKW,oBAAL,CAA0B,YAA1B;AANZ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACE;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA,iDAEE;AACE,cAAA,KAAK,EAAE;AAACQ,gBAAAA,OAAO,EAAE,OAAV;AAAmBH,gBAAAA,KAAK,EAAE,oBAA1B;AAAgDI,gBAAAA,OAAO,EAAE;AAAzD,eADT;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,IAAI,EAAC,UAHP;AAIE,cAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWG,QAJpB;AAKE,cAAA,QAAQ,EAAE,KAAKU,oBAAL,CAA0B,UAA1B;AALZ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAyCE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AACE,UAAA,KAAK,EAAC,SADR;AAEE,UAAA,IAAI,EAAE,OAFR;AAGE,UAAA,KAAK,EAAE;AAACU,YAAAA,MAAM,EAAE,OAAT;AAAkBL,YAAAA,KAAK,EAAE,OAAzB;AAAkCM,YAAAA,UAAU,EAAE;AAA9C,WAHT;AAIE,UAAA,OAAO,EAAE,KAAKnB,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAzCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqDD;;AAtFmC;;AAyFtC,eAAeX,OAAO,CAACC,eAAD,CAAP,CAAyBI,aAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport './CreateContest.css';\n// import placeholder image\nimport { Button, TextField, Typography } from '@material-ui/core';\n\nclass CreateContest extends Component {\n  state = {\n      name: '',\n      start_date: '',\n      end_date: '',\n      image: ''\n    };\n    \n  // Function creates contests, sends name, start and end date to saga. \n  createContest = (event) => {\n    event.preventDefault();\n    this.props.dispatch({\n      type: 'CREATE_CONTEST',\n      payload: {\n        name: this.state.name,\n        start_date: this.state.start_date,\n        end_date: this.state.end_date,\n      },\n    });\n    this.setState({\n      name: '',\n      start_date: '',\n      end_date: ''\n    });\n  }; // end createContest\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });                \n  };\n\n  render() {\n    return (\n      <div className='adminCreateContestContainer'>\n        <div className='adminCreateContestHeader'>\n          <Typography style={{color: '#4d4d4f', fontFamily: 'Poppins'}} variant='h5'>Create Contest</Typography>\n        </div>\n        <div className='adminContestNameInput'>\n          <TextField id=\"outlined-basic\" \n            style={{width: '100%'}}\n            label=\"Contest Name\" \n            variant=\"outlined\" \n            value={this.state.name}\n            required \n            onChange={this.handleInputChangeFor('name')}>\n          </TextField>\n        </div>\n        <div className='adminCreateContestStartEndDates'>\n          <div className='startDate'>\n            <label htmlFor=\"start_date\">\n              Start Date:\n              <input\n                style={{display: 'block', color: 'rgb(118, 118, 118)', padding: '10px'}} \n                type=\"date\"\n                name=\"start_date\"\n                value={this.state.start_date}\n                required\n                onChange={this.handleInputChangeFor('start_date')}\n              />\n            </label>\n          </div>\n          <div className='endDate'>\n            <label htmlFor=\"end_date\">\n              End Date:\n              <input\n                style={{display: 'block', color: 'rgb(118, 118, 118)', padding: '10px'}} \n                type=\"date\"\n                name=\"end_date\"\n                value={this.state.end_date}\n                onChange={this.handleInputChangeFor('end_date')}\n              />\n            </label>\n          </div>\n        </div>\n        <div className='createContestBtn'>\n          <Button variant='contained' \n            color='primary'\n            size= 'large'\n            style={{margin: '.5rem', color: 'white', background: '#054f95'}}\n            onClick={this.createContest}>\n              Create Contest\n          </Button> \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(CreateContest);"]},"metadata":{},"sourceType":"module"}