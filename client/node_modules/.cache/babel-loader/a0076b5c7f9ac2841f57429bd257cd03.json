{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/User/ContestHome/ContestHome.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../../redux/mapStoreToProps'; // import components\n\nimport AllChallengePhotos from '../AllChallengePhotos/AllChallengePhotos';\nimport ChallengeOfTheDay from '../Challenges/Challenges';\nimport Leaderboard from '../Leaderboard/Leaderboard';\nimport Nav from '../../Nav/Nav.js';\nimport ScrollingFooter from '../../ScrollingFooter/ScrollingFooter';\nimport TopSteppers from '../TopSteppers/TopSteppers'; // import react multi carousel\n\nimport 'react-multi-carousel/lib/styles.css'; // import css\n\nimport './ContestHome.css';\n\nclass ContestHome extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checkAdmin = () => {\n      if (this.props.store.user.admin === 'ADMIN') {\n        this.props.history.push('/adminhome');\n      }\n\n      ;\n    };\n\n    this.getLeaderBoard = () => {\n      this.props.dispatch({\n        type: \"FETCH_LEADER_BOARD\"\n      });\n    };\n\n    this.getTopSteppers = () => {\n      this.props.dispatch({\n        type: \"FETCH_TOP_STEPPERS\"\n      });\n    };\n\n    this.getUserInfo = () => {\n      this.props.dispatch({\n        type: 'FETCH_USER'\n      });\n    };\n  }\n\n  // On page load runs these four functions\n  componentDidMount() {\n    this.checkAdmin();\n    this.getLeaderBoard();\n    this.getTopSteppers();\n    this.getUserInfo();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Leaderboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TopSteppers, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChallengeOfTheDay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AllChallengePhotos, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollingFooter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(mapStoreToProps)(ContestHome);","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/User/ContestHome/ContestHome.js"],"names":["React","Component","connect","mapStoreToProps","AllChallengePhotos","ChallengeOfTheDay","Leaderboard","Nav","ScrollingFooter","TopSteppers","ContestHome","checkAdmin","props","store","user","admin","history","push","getLeaderBoard","dispatch","type","getTopSteppers","getUserInfo","componentDidMount","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,gCAA5B,C,CACA;;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,WAAP,MAAwB,4BAAxB,C,CACA;;AACA,OAAO,qCAAP,C,CACA;;AACA,OAAO,mBAAP;;AAEA,MAAMC,WAAN,SAA0BT,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAUlCU,UAVkC,GAUrB,MAAM;AACjB,UAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,IAAjB,CAAsBC,KAAtB,KAAgC,OAApC,EAA6C;AAC3C,aAAKH,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD;;AAAA;AACF,KAdiC;;AAAA,SAiBlCC,cAjBkC,GAiBjB,MAAM;AACrB,WAAKN,KAAL,CAAWO,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAE;AADY,OAApB;AAGD,KArBiC;;AAAA,SAwBlCC,cAxBkC,GAwBjB,MAAM;AACrB,WAAKT,KAAL,CAAWO,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAE;AADY,OAApB;AAGD,KA5BiC;;AAAA,SA+BlCE,WA/BkC,GA+BpB,MAAM;AAClB,WAAKV,KAAL,CAAWO,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAE;AADY,OAApB;AAGD,KAnCiC;AAAA;;AAClC;AACAG,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,UAAL;AACA,SAAKO,cAAL;AACA,SAAKG,cAAL;AACA,SAAKC,WAAL;AACD;;AA8BDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAlDiC;;AAqDpC,eAAetB,OAAO,CAACC,eAAD,CAAP,CAAyBO,WAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\n// import components\nimport AllChallengePhotos from '../AllChallengePhotos/AllChallengePhotos';\nimport ChallengeOfTheDay from '../Challenges/Challenges'\nimport Leaderboard from '../Leaderboard/Leaderboard';\nimport Nav from '../../Nav/Nav.js';\nimport ScrollingFooter from '../../ScrollingFooter/ScrollingFooter';\nimport TopSteppers from '../TopSteppers/TopSteppers';\n// import react multi carousel\nimport 'react-multi-carousel/lib/styles.css';\n// import css\nimport './ContestHome.css';\n\nclass ContestHome extends Component {\n  // On page load runs these four functions\n  componentDidMount() {\n    this.checkAdmin();\n    this.getLeaderBoard();\n    this.getTopSteppers();\n    this.getUserInfo();\n  };\n\n  // Functions checks user admin level if admin pushes to admin view\n  checkAdmin = () => {\n    if (this.props.store.user.admin === 'ADMIN') {\n      this.props.history.push('/adminhome')\n    };\n  };\n  \n  // Function dispatches to get info for leaderboard\n  getLeaderBoard = () => {\n    this.props.dispatch({\n      type: \"FETCH_LEADER_BOARD\"\n    });\n  };\n\n  // Function dispatches to get top steppers\n  getTopSteppers = () => {\n    this.props.dispatch({\n      type: \"FETCH_TOP_STEPPERS\"\n    });\n  };\n\n  // Function dispatches to get user info \n  getUserInfo = () => {\n    this.props.dispatch({\n      type: 'FETCH_USER'\n    });\n  };\n  \n  render() {    \n    return (\n      <div >\n        <Nav />\n        <div className=\"container\">\n          <Leaderboard/>\n          <TopSteppers/>\n          <ChallengeOfTheDay/>\n          <AllChallengePhotos/>\n        </div>\n        <ScrollingFooter/>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(ContestHome);"]},"metadata":{},"sourceType":"module"}