{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/User/RegisterForm/RegisterForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport mapStoreToProps from '../../../redux/mapStoreToProps'; // import s3 dropzone\n\nimport DropzoneS3Uploader from 'react-dropzone-s3-uploader'; // import material ui\n\nimport { Button, FormControl, InputLabel, MenuItem, Select, TextField } from '@material-ui/core'; // import css \n\nimport './RegisterForm.css';\n\nclass RegisterForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      first_name: '',\n      last_name: '',\n      email: '',\n      username: '',\n      password: '',\n      photo: '',\n      contests_id: ''\n    };\n\n    this.registerUser = event => {\n      event.preventDefault();\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          first_name: this.state.first_name,\n          last_name: this.state.last_name,\n          email: this.state.email,\n          username: this.state.username,\n          password: this.state.password,\n          photo: this.state.photo,\n          contests_id: this.state.contests_id\n        }\n      });\n      this.props.history.push('/createorjointeam');\n    };\n\n    this.handleInputChangeFor = propertyName => event => {\n      this.setState({\n        [propertyName]: event.target.value\n      });\n    };\n\n    this.handleFinishedUpload = info => {\n      this.setState({\n        photo: info.fileUrl\n      });\n    };\n  }\n\n  componentDidMount() {\n    // Dispatching fetch contest on this page load so that users have access contest for drop down.\n    this.props.dispatch({\n      type: 'FETCH_CONTEST'\n    });\n  }\n\n  render() {\n    const uploadOptions = {// signingUrlQueryParams: {uploadType: 'avatar'},\n    };\n    const s3Url = `http://${process.env.REACT_APP_S3_BUCKET}.s3.amazonaws.com`;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formPanel\",\n      onSubmit: this.registerUser,\n      children: [this.props.store.errors.registrationMessage && /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"alert\",\n        role: \"alert\",\n        children: this.props.store.errors.registrationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registerItem registerFirstName\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          style: {\n            width: '90%'\n          },\n          name: \"first_name\",\n          required: true,\n          htmlFor: \"first_name\",\n          value: this.state.first_name,\n          label: \"First Name\",\n          variant: \"outlined\",\n          type: \"text\",\n          onChange: this.handleInputChangeFor('first_name')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registerItem registerLastName\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          name: \"last_name\",\n          style: {\n            width: '90%'\n          },\n          required: true,\n          htmlFor: \"last_name\",\n          value: this.state.last_name,\n          label: \"Last Name\",\n          variant: \"outlined\",\n          type: \"text\",\n          onChange: this.handleInputChangeFor('last_name')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registerItem registerEmail\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          style: {\n            width: '90%'\n          },\n          name: \"email\",\n          required: true,\n          htmlFor: \"email\",\n          value: this.state.email,\n          label: \"Email\",\n          variant: \"outlined\",\n          type: \"text\",\n          onChange: this.handleInputChangeFor('email')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registerItem registerUserName\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          name: \"username\",\n          style: {\n            width: '90%'\n          },\n          required: true,\n          htmlFor: \"username\",\n          value: this.state.username,\n          label: \"Username\",\n          variant: \"outlined\",\n          type: \"text\",\n          onChange: this.handleInputChangeFor('username')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registerItem registerPassword\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          name: \"password\",\n          required: true,\n          style: {\n            width: '90%'\n          },\n          htmlFor: \"password\",\n          value: this.state.password,\n          label: \"Password\",\n          variant: \"outlined\",\n          type: \"password\",\n          onChange: this.handleInputChangeFor('password')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registerItem\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          style: {\n            width: '90%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            style: {\n              paddingLeft: 14\n            },\n            children: \"Select Contest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: this.state.contests_id,\n            variant: \"outlined\",\n            onChange: this.handleInputChangeFor('contests_id'),\n            children: this.props.store.contest.map(contest => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: contest.id,\n              children: contest.name\n            }, contest.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registerItem\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"photo\",\n          children: [\"Photo:\", /*#__PURE__*/_jsxDEV(DropzoneS3Uploader, {\n            onFinish: this.handleFinishedUpload,\n            s3Url: s3Url,\n            maxSize: 1024 * 1024 * 5,\n            upload: uploadOptions,\n            className: \"previewImage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registerItem registerBtn\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          style: {\n            color: 'white',\n            marginTop: '1rem',\n            fontSize: 18,\n            background: '#054f95'\n          },\n          color: \"primary\",\n          className: \"btn\",\n          type: \"submit\",\n          name: \"submit\",\n          value: \"Register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(mapStoreToProps)(withRouter(RegisterForm));","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/User/RegisterForm/RegisterForm.js"],"names":["React","Component","connect","withRouter","mapStoreToProps","DropzoneS3Uploader","Button","FormControl","InputLabel","MenuItem","Select","TextField","RegisterForm","state","first_name","last_name","email","username","password","photo","contests_id","registerUser","event","preventDefault","props","dispatch","type","payload","history","push","handleInputChangeFor","propertyName","setState","target","value","handleFinishedUpload","info","fileUrl","componentDidMount","render","uploadOptions","s3Url","process","env","REACT_APP_S3_BUCKET","store","errors","registrationMessage","width","paddingLeft","contest","map","id","name","color","marginTop","fontSize","background"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\n// import s3 dropzone\nimport DropzoneS3Uploader from 'react-dropzone-s3-uploader';\n// import material ui\nimport { Button, FormControl, InputLabel, MenuItem, Select, TextField } from '@material-ui/core';\n// import css \nimport './RegisterForm.css';\n\nclass RegisterForm extends Component {\n  state = {\n    first_name: '',\n    last_name: '',\n    email: '',\n    username: '',\n    password: '',\n    photo: '',\n    contests_id: '', \n  };\n\n  componentDidMount() {\n    // Dispatching fetch contest on this page load so that users have access contest for drop down.\n    this.props.dispatch({ type: 'FETCH_CONTEST'});\n  }\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    this.props.dispatch({\n      type: 'REGISTER',\n      payload: {\n        first_name: this.state.first_name,\n        last_name: this.state.last_name,\n        email: this.state.email,\n        username: this.state.username,\n        password: this.state.password,\n        photo: this.state.photo,\n        contests_id: this.state.contests_id,\n      },\n    });\n    this.props.history.push('/createorjointeam');\n  }; // end registerUser\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  // function runs upon finishing file upload\n  handleFinishedUpload = info => {\n    this.setState({\n      photo: info.fileUrl\n    });\n  };\n\n  render() {\n    const uploadOptions = {\n      // signingUrlQueryParams: {uploadType: 'avatar'},\n    }\n\n    const s3Url = `http://${process.env.REACT_APP_S3_BUCKET}.s3.amazonaws.com`;\n\n    return (\n      <form className=\"formPanel\" onSubmit={this.registerUser}>\n        {this.props.store.errors.registrationMessage && (\n          <h3 className=\"alert\" role=\"alert\">\n            {this.props.store.errors.registrationMessage}\n          </h3>\n        )}\n        <div className='registerItem registerFirstName'>\n          <TextField \n            id=\"outlined-basic\" \n            style={{width: '90%'}}\n            name=\"first_name\" \n            required \n            htmlFor=\"first_name\" \n            value={this.state.first_name} \n            label=\"First Name\" \n            variant=\"outlined\"\n            type=\"text\"\n            onChange={this.handleInputChangeFor('first_name')}>\n          </TextField>\n        </div>\n        <div className='registerItem registerLastName'>\n          <TextField \n            id=\"outlined-basic\" \n            name=\"last_name\" \n            style={{width: '90%'}}\n            required \n            htmlFor=\"last_name\" \n            value={this.state.last_name} \n            label=\"Last Name\" \n            variant=\"outlined\"\n            type=\"text\"\n            onChange={this.handleInputChangeFor('last_name')}>\n          </TextField>\n        </div>\n        <div className='registerItem registerEmail'>\n          <TextField \n            id=\"outlined-basic\" \n            style={{width: '90%'}}\n            name=\"email\" \n            required \n            htmlFor=\"email\" \n            value={this.state.email} \n            label=\"Email\" \n            variant=\"outlined\"\n            type=\"text\"\n            onChange={this.handleInputChangeFor('email')}>\n          </TextField>\n        </div>\n        <div className='registerItem registerUserName'>\n          <TextField \n            id=\"outlined-basic\" \n            name=\"username\" \n            style={{width: '90%'}}\n            required \n            htmlFor=\"username\" \n            value={this.state.username} \n            label=\"Username\" \n            variant=\"outlined\"\n            type=\"text\"\n            onChange={this.handleInputChangeFor('username')}>\n          </TextField>\n        </div>\n        <div className='registerItem registerPassword'>\n          <TextField \n            id=\"outlined-basic\" \n            name=\"password\" \n            required \n            style={{width: '90%'}}\n            htmlFor=\"password\" \n            value={this.state.password} \n            label=\"Password\" \n            variant=\"outlined\"\n            type=\"password\"\n            onChange={this.handleInputChangeFor('password')}>\n          </TextField>\n        </div>\n        <div className='registerItem'>\n          <FormControl style={{width: '90%'}}>\n            <InputLabel style={{paddingLeft:14}}>\n              Select Contest\n            </InputLabel> \n            <Select \n              value={this.state.contests_id} \n              variant='outlined' \n              onChange={this.handleInputChangeFor('contests_id')}\n            >\n              {this.props.store.contest.map(contest => \n                <MenuItem key={contest.id} value={contest.id}>{contest.name}</MenuItem>\n              )}\n            </Select>\n          </FormControl>\n        </div>\n        <div className='registerItem'>\n          <label htmlFor=\"photo\">\n            Photo:\n            <DropzoneS3Uploader\n              onFinish={this.handleFinishedUpload}\n              s3Url={s3Url}\n              maxSize={1024 * 1024 * 5}\n              upload={uploadOptions}\n              className=\"previewImage\"\n            />\n          </label>\n        </div>\n        <div className=\"registerItem registerBtn\">\n          <Button \n            variant='contained'\n            style={{ color: 'white', marginTop: '1rem', fontSize: 18, background: '#054f95'}} \n            color='primary'\n            className=\"btn\" \n            type=\"submit\" \n            name=\"submit\" \n            value=\"Register\">\n              Register\n          </Button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(withRouter(RegisterForm));"]},"metadata":{},"sourceType":"module"}