{"ast":null,"code":"import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios'; // Function sends team creation data via post request. \n\nfunction* createTeamSaga(action) {\n  yield axios.post(`/api/teams`, action.payload);\n}\n\n; // Function sends get request to get data for join team component, puts data into reducer listening for 'SET_CAPTAINS_SEARCH'\n\nfunction* fetchCaptainsForJoinSaga() {\n  let response = yield axios.get('/api/teams/searchforcaptains');\n  yield put({\n    type: 'SET_CAPTAINS_SEARCH',\n    payload: response.data\n  });\n}\n\n; // functions gets all photos for captain level which have both status' of true/false for approved column\n\nfunction* fetchTeamCaptainPhotosSaga(action) {\n  let response = yield axios({\n    method: 'GET',\n    url: `/api/teamDetails/captain/photos/${action.payload}`\n  });\n  yield put({\n    type: 'SET_CAPTAIN_TEAM_PHOTOS',\n    payload: response.data\n  });\n}\n\n; // function sends get request to get users in order of steps taken via team id\n\nfunction* fetchTeamDetailsSaga(action) {\n  let response = yield axios({\n    method: 'GET',\n    url: `/api/teamDetails/${action.payload}`,\n    params: {\n      id: action.payload\n    }\n  });\n  yield put({\n    type: 'SET_TEAM_DETAILS',\n    payload: response.data\n  });\n}\n\n; // Function gets all teams by contest id and puts that data into two different reducers. \n\nfunction* fetchTeamsForJoinSaga() {\n  let response = yield axios.get('/api/teams/searchforteams');\n  yield put({\n    type: 'SET_TEAMS_SEARCH',\n    payload: response.data\n  });\n  yield put({\n    type: 'SET_TEAMS_ONLY',\n    payload: response.data\n  });\n}\n\n; // function gets all the photos for user level which is only approved photos.\n\nfunction* fetchUserTeamPhotosSaga(action) {\n  let response = yield axios({\n    method: 'GET',\n    url: `/api/teamDetails/user/photos/${action.payload}`\n  });\n  yield put({\n    type: 'SET_USER_TEAM_PHOTOS',\n    payload: response.data\n  });\n}\n\n; // Function sends put request to update users team id.\n\nfunction* joinTeamSaga(action) {\n  const user_id = action.payload.user_id;\n  const selected_team_id = {\n    selected_team_id: action.payload.selected_team_id\n  };\n  yield axios.put(`/api/teams/join/${user_id}`, selected_team_id);\n}\n\n;\n\nfunction* teamSaga() {\n  yield takeLatest('CREATE_TEAM', createTeamSaga);\n  yield takeLatest('FETCH_CAPTAINS_FOR_JOIN', fetchCaptainsForJoinSaga);\n  yield takeLatest('FETCH_CAPTAIN_TEAM_PHOTOS', fetchTeamCaptainPhotosSaga);\n  yield takeLatest('FETCH_TEAM_DETAILS', fetchTeamDetailsSaga);\n  yield takeLatest('FETCH_TEAMS_FOR_JOIN', fetchTeamsForJoinSaga);\n  yield takeLatest('FETCH_USER_TEAM_PHOTOS', fetchUserTeamPhotosSaga);\n  yield takeLatest('JOIN_TEAM', joinTeamSaga);\n}\n\n;\nexport default teamSaga;","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/redux/sagas/team.saga.js"],"names":["put","takeLatest","axios","createTeamSaga","action","post","payload","fetchCaptainsForJoinSaga","response","get","type","data","fetchTeamCaptainPhotosSaga","method","url","fetchTeamDetailsSaga","params","id","fetchTeamsForJoinSaga","fetchUserTeamPhotosSaga","joinTeamSaga","user_id","selected_team_id","teamSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,oBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,UAAUC,cAAV,CAAyBC,MAAzB,EAAgC;AAC9B,QAAMF,KAAK,CAACG,IAAN,CAAY,YAAZ,EAAyBD,MAAM,CAACE,OAAhC,CAAN;AACD;;AAAA,C,CAED;;AACA,UAAUC,wBAAV,GAAoC;AAClC,MAAIC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,8BAAV,CAArB;AACA,QAAMT,GAAG,CAAC;AACRU,IAAAA,IAAI,EAAE,qBADE;AAERJ,IAAAA,OAAO,EAAEE,QAAQ,CAACG;AAFV,GAAD,CAAT;AAID;;AAAA,C,CAED;;AACA,UAAUC,0BAAV,CAAqCR,MAArC,EAA4C;AAC1C,MAAII,QAAQ,GAAG,MAAMN,KAAK,CAAC;AACzBW,IAAAA,MAAM,EAAE,KADiB;AAEzBC,IAAAA,GAAG,EAAG,mCAAkCV,MAAM,CAACE,OAAQ;AAF9B,GAAD,CAA1B;AAIA,QAAMN,GAAG,CAAC;AACRU,IAAAA,IAAI,EAAE,yBADE;AAERJ,IAAAA,OAAO,EAAEE,QAAQ,CAACG;AAFV,GAAD,CAAT;AAID;;AAAA,C,CAED;;AACA,UAAUI,oBAAV,CAA+BX,MAA/B,EAAsC;AACpC,MAAII,QAAQ,GAAG,MAAMN,KAAK,CAAC;AACzBW,IAAAA,MAAM,EAAE,KADiB;AAEzBC,IAAAA,GAAG,EAAG,oBAAmBV,MAAM,CAACE,OAAQ,EAFf;AAGzBU,IAAAA,MAAM,EAAE;AACNC,MAAAA,EAAE,EAAEb,MAAM,CAACE;AADL;AAHiB,GAAD,CAA1B;AAOA,QAAMN,GAAG,CAAC;AACRU,IAAAA,IAAI,EAAE,kBADE;AAERJ,IAAAA,OAAO,EAAEE,QAAQ,CAACG;AAFV,GAAD,CAAT;AAID;;AAAA,C,CAED;;AACA,UAAUO,qBAAV,GAAiC;AAC/B,MAAIV,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,2BAAV,CAArB;AACA,QAAMT,GAAG,CAAC;AACRU,IAAAA,IAAI,EAAE,kBADE;AAERJ,IAAAA,OAAO,EAAEE,QAAQ,CAACG;AAFV,GAAD,CAAT;AAIA,QAAMX,GAAG,CAAC;AACRU,IAAAA,IAAI,EAAE,gBADE;AAERJ,IAAAA,OAAO,EAAEE,QAAQ,CAACG;AAFV,GAAD,CAAT;AAID;;AAAA,C,CAED;;AACA,UAAUQ,uBAAV,CAAkCf,MAAlC,EAAyC;AACvC,MAAII,QAAQ,GAAG,MAAMN,KAAK,CAAC;AACzBW,IAAAA,MAAM,EAAE,KADiB;AAEzBC,IAAAA,GAAG,EAAG,gCAA+BV,MAAM,CAACE,OAAQ;AAF3B,GAAD,CAA1B;AAIA,QAAMN,GAAG,CAAC;AACRU,IAAAA,IAAI,EAAC,sBADG;AAERJ,IAAAA,OAAO,EAAEE,QAAQ,CAACG;AAFV,GAAD,CAAT;AAID;;AAAA,C,CAED;;AACA,UAAUS,YAAV,CAAuBhB,MAAvB,EAA8B;AAC5B,QAAMiB,OAAO,GAAGjB,MAAM,CAACE,OAAP,CAAee,OAA/B;AACA,QAAMC,gBAAgB,GAAG;AAACA,IAAAA,gBAAgB,EAAElB,MAAM,CAACE,OAAP,CAAegB;AAAlC,GAAzB;AACA,QAAMpB,KAAK,CAACF,GAAN,CAAW,mBAAkBqB,OAAQ,EAArC,EAAwCC,gBAAxC,CAAN;AACD;;AAAA;;AAED,UAAUC,QAAV,GAAqB;AACnB,QAAMtB,UAAU,CAAC,aAAD,EAAgBE,cAAhB,CAAhB;AACA,QAAMF,UAAU,CAAC,yBAAD,EAA4BM,wBAA5B,CAAhB;AACA,QAAMN,UAAU,CAAC,2BAAD,EAA8BW,0BAA9B,CAAhB;AACA,QAAMX,UAAU,CAAC,oBAAD,EAAuBc,oBAAvB,CAAhB;AACA,QAAMd,UAAU,CAAC,sBAAD,EAAyBiB,qBAAzB,CAAhB;AACA,QAAMjB,UAAU,CAAC,wBAAD,EAA2BkB,uBAA3B,CAAhB;AACA,QAAMlB,UAAU,CAAC,WAAD,EAAcmB,YAAd,CAAhB;AACD;;AAAA;AAED,eAAeG,QAAf","sourcesContent":["import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// Function sends team creation data via post request. \nfunction* createTeamSaga(action){\n  yield axios.post(`/api/teams`, action.payload);\n};\n\n// Function sends get request to get data for join team component, puts data into reducer listening for 'SET_CAPTAINS_SEARCH'\nfunction* fetchCaptainsForJoinSaga(){\n  let response = yield axios.get('/api/teams/searchforcaptains')\n  yield put({\n    type: 'SET_CAPTAINS_SEARCH',\n    payload: response.data\n  });\n};\n\n// functions gets all photos for captain level which have both status' of true/false for approved column\nfunction* fetchTeamCaptainPhotosSaga(action){\n  let response = yield axios({\n    method: 'GET',\n    url: `/api/teamDetails/captain/photos/${action.payload}`,\n  });\n  yield put({\n    type: 'SET_CAPTAIN_TEAM_PHOTOS',\n    payload: response.data\n  });\n};\n\n// function sends get request to get users in order of steps taken via team id\nfunction* fetchTeamDetailsSaga(action){\n  let response = yield axios({\n    method: 'GET',\n    url: `/api/teamDetails/${action.payload}`,\n    params: {\n      id: action.payload\n    }\n  });\n  yield put({\n    type: 'SET_TEAM_DETAILS',\n    payload: response.data\n  });\n};\n\n// Function gets all teams by contest id and puts that data into two different reducers. \nfunction* fetchTeamsForJoinSaga(){\n  let response = yield axios.get('/api/teams/searchforteams')\n  yield put({\n    type: 'SET_TEAMS_SEARCH',\n    payload: response.data\n  });\n  yield put({\n    type: 'SET_TEAMS_ONLY',\n    payload: response.data\n  });\n};\n\n// function gets all the photos for user level which is only approved photos.\nfunction* fetchUserTeamPhotosSaga(action){\n  let response = yield axios({\n    method: 'GET',\n    url: `/api/teamDetails/user/photos/${action.payload}`,\n  });\n  yield put({\n    type:'SET_USER_TEAM_PHOTOS',\n    payload: response.data\n  });\n};\n\n// Function sends put request to update users team id.\nfunction* joinTeamSaga(action){\n  const user_id = action.payload.user_id;\n  const selected_team_id = {selected_team_id: action.payload.selected_team_id};\n  yield axios.put(`/api/teams/join/${user_id}`, selected_team_id);\n};\n\nfunction* teamSaga() {\n  yield takeLatest('CREATE_TEAM', createTeamSaga);\n  yield takeLatest('FETCH_CAPTAINS_FOR_JOIN', fetchCaptainsForJoinSaga);\n  yield takeLatest('FETCH_CAPTAIN_TEAM_PHOTOS', fetchTeamCaptainPhotosSaga);\n  yield takeLatest('FETCH_TEAM_DETAILS', fetchTeamDetailsSaga);\n  yield takeLatest('FETCH_TEAMS_FOR_JOIN', fetchTeamsForJoinSaga);\n  yield takeLatest('FETCH_USER_TEAM_PHOTOS', fetchUserTeamPhotosSaga)\n  yield takeLatest('JOIN_TEAM', joinTeamSaga);\n};\n\nexport default teamSaga;"]},"metadata":{},"sourceType":"module"}