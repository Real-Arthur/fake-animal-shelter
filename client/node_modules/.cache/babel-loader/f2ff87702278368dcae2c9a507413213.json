{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/User/SubmitPhotos/ImageUpload.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport DropzoneS3Uploader from 'react-dropzone-s3-uploader';\nimport moment from 'moment';\nimport mapStoreToProps from '../../../redux/mapStoreToProps'; // import material ui\n\nimport { Button } from '@material-ui/core'; // import sweet alert\n\nimport swal from 'sweetalert';\n\nclass ImageUpload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fileUrl: '',\n      date: '',\n      challenges_id: ''\n    };\n\n    this.confirmationSubmitPhoto = event => {\n      if (this.state.fileUrl === '') {\n        swal(`Please select a photo to upload`);\n      } else {\n        this.submitPhoto(event);\n      }\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        fileUrl: '',\n        date: '',\n        challenges_id: ''\n      });\n      this.props.history.goBack();\n    };\n\n    this.handleFinishedUpload = info => {\n      this.setState({\n        fileUrl: info.fileUrl,\n        date: moment(Date()).format(),\n        challenges_id: this.props.store.dailyChallenges[0]\n      });\n    };\n\n    this.submitPhoto = event => {\n      event.preventDefault();\n      this.props.dispatch({\n        type: 'CREATE_PHOTOS',\n        payload: {\n          fileUrl: this.state.fileUrl,\n          date: this.state.date,\n          challenges_id: this.state.challenges_id,\n          start_of_today: moment().startOf('day').format(),\n          end_of_today: moment().endOf('day').format()\n        }\n      });\n      this.props.history.push('/home');\n    };\n  }\n\n  render() {\n    const uploadOptions = {// signingUrlQueryParams: {uploadType: 'avatar'},\n    };\n    const s3Url = `http://${process.env.REACT_APP_S3_BUCKET}.s3.amazonaws.com`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DropzoneS3Uploader, {\n        onFinish: this.handleFinishedUpload,\n        s3Url: s3Url,\n        maxSize: 1024 * 1024 * 5,\n        upload: uploadOptions,\n        className: \"previewImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cancelSubmitBtnGroup\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"default\",\n          size: \"large\",\n          style: {\n            margin: '.5rem'\n          },\n          onClick: this.handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          style: {\n            margin: '.5rem',\n            color: 'white',\n            background: '#054f95'\n          },\n          onClick: this.confirmationSubmitPhoto,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(mapStoreToProps)(withRouter(ImageUpload));","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/User/SubmitPhotos/ImageUpload.js"],"names":["React","Component","connect","withRouter","DropzoneS3Uploader","moment","mapStoreToProps","Button","swal","ImageUpload","state","fileUrl","date","challenges_id","confirmationSubmitPhoto","event","submitPhoto","handleCancel","setState","props","history","goBack","handleFinishedUpload","info","Date","format","store","dailyChallenges","preventDefault","dispatch","type","payload","start_of_today","startOf","end_of_today","endOf","push","render","uploadOptions","s3Url","process","env","REACT_APP_S3_BUCKET","margin","color","background"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport DropzoneS3Uploader from 'react-dropzone-s3-uploader';\nimport moment from 'moment';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\n// import material ui\nimport { Button } from '@material-ui/core';\n// import sweet alert\nimport swal from 'sweetalert';\n\nclass ImageUpload extends Component {\n  state = {\n    fileUrl: '',\n    date: '',\n    challenges_id: '',\n  };\n\n  // function is validation for submitting photo\n  confirmationSubmitPhoto = (event) => {\n    if(this.state.fileUrl === ''){\n      swal(`Please select a photo to upload`);\n    } else {\n      this.submitPhoto(event);\n    }\n  };\n\n  // function sets states to empty strings and pushes user back\n  handleCancel = () => {\n    this.setState({\n      fileUrl: '',\n      date: '',\n      challenges_id: ''\n    });\n    this.props.history.goBack();\n  };\n\n  // function runs upon file image upload finshing\n  handleFinishedUpload = info => {\n    this.setState({\n      fileUrl: info.fileUrl,\n      date: moment(Date()).format(),\n      challenges_id: this.props.store.dailyChallenges[0],\n    });\n  };\n\n  // function sends photo creation data to saga listening for 'CREATE_PHOTOS'\n  submitPhoto = (event) => {\n    event.preventDefault();\n    this.props.dispatch({\n        type: 'CREATE_PHOTOS',\n        payload: {\n          fileUrl: this.state.fileUrl,\n          date: this.state.date,\n          challenges_id: this.state.challenges_id,\n          start_of_today: moment().startOf('day').format(),\n          end_of_today: moment().endOf('day').format()\n        },\n      });\n    this.props.history.push('/home');\n  };\n\n  render() {\n      const uploadOptions = {\n          // signingUrlQueryParams: {uploadType: 'avatar'},\n      }\n\n      const s3Url = `http://${process.env.REACT_APP_S3_BUCKET}.s3.amazonaws.com`;\n\n    return (\n      <div>\n        <DropzoneS3Uploader\n          onFinish={this.handleFinishedUpload}\n          s3Url={s3Url}\n          maxSize={1024 * 1024 * 5}\n          upload={uploadOptions}\n          className=\"previewImage\"\n        >\n        </DropzoneS3Uploader>\n        <div className='cancelSubmitBtnGroup'>\n          <Button \n            variant='contained' \n            color='default'\n            size= 'large'\n            style={{margin: '.5rem'}}\n            onClick={this.handleCancel}>\n              Cancel\n          </Button>    \n          <Button \n            variant='contained' \n            color='primary'\n            size= 'large'\n            style={{margin: '.5rem', color: 'white', background: '#054f95'}} \n            onClick={this.confirmationSubmitPhoto}>\n              Submit\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(withRouter(ImageUpload));"]},"metadata":{},"sourceType":"module"}