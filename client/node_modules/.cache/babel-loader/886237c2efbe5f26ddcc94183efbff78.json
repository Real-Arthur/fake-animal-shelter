{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/User/SubmitSteps/SubmitSteps.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport mapStoreToProps from '../../../redux/mapStoreToProps'; // import components\n\nimport Nav from '../../Nav/Nav.js';\nimport ScrollingFooter from '../../ScrollingFooter/ScrollingFooter'; // import material ui\n\nimport { Button, Card, TextField, Typography } from '@material-ui/core'; // import sweet alert\n\nimport swal from 'sweetalert'; // import css\n\nimport './SubmitSteps.css';\n\nclass SubmitSteps extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      steps: '',\n      date: ''\n    };\n\n    this.confirmationSubmitSteps = event => {\n      if (this.state.steps === '') {\n        swal(`Please enter steps`);\n      } else if (this.state.date === '') {\n        swal(`Please select a date`);\n      } else {\n        swal({\n          title: \"Is the submitted information correct?\",\n          text: `Steps: ${this.state.steps} \n            Date: ${this.state.date.split('T')[0]}`,\n          icon: \"info\",\n          buttons: {\n            cancel: \"No\",\n            yes: true\n          }\n        }).then(isCorrect => {\n          if (isCorrect) {\n            this.submitSteps(event);\n            swal({\n              title: \"You're steps have been logged!\",\n              icon: \"success\"\n            }).then(() => {\n              this.props.history.goBack();\n            });\n          } else {\n            swal(`No steps were logged`);\n          }\n        });\n      }\n    };\n\n    this.handleChangeFor = propertyName => event => {\n      this.setState({\n        [propertyName]: event.target.value\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        steps: '',\n        date: ''\n      });\n      this.props.history.goBack();\n    };\n\n    this.submitSteps = event => {\n      event.preventDefault();\n      this.props.dispatch({\n        type: 'CREATE_STEPS',\n        payload: {\n          steps: this.state.steps,\n          date: this.state.date\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"submitStepsSection\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: '300px',\n                marginLeft: 'auto',\n                marginRight: 'auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"submitStepsHeadline\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    color: '#4d4d4f',\n                    fontFamily: 'Poppins'\n                  },\n                  variant: \"h5\",\n                  children: \"Submit Steps\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"submitStepsInput\",\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"outlined-basic\",\n                  type: \"number\",\n                  label: \"Number of steps\",\n                  variant: \"outlined\",\n                  onChange: this.handleChangeFor('steps')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dateInputField\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  style: {\n                    display: 'block',\n                    width: 175,\n                    color: 'rgb(118, 118, 118)',\n                    padding: '10px'\n                  },\n                  type: \"date\",\n                  value: this.state.date,\n                  id: \"date\",\n                  name: \"date\",\n                  onChange: this.handleChangeFor('date')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stepsSubmitCancelBtns\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"default\",\n              size: \"large\",\n              style: {\n                margin: '.5rem'\n              },\n              onClick: this.handleCancel,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              size: \"large\",\n              style: {\n                margin: '.5rem',\n                color: 'white',\n                background: '#054f95'\n              },\n              onClick: this.confirmationSubmitSteps,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollingFooter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(mapStoreToProps)(withRouter(SubmitSteps));","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/User/SubmitSteps/SubmitSteps.js"],"names":["React","Component","connect","withRouter","mapStoreToProps","Nav","ScrollingFooter","Button","Card","TextField","Typography","swal","SubmitSteps","state","steps","date","confirmationSubmitSteps","event","title","text","split","icon","buttons","cancel","yes","then","isCorrect","submitSteps","props","history","goBack","handleChangeFor","propertyName","setState","target","value","handleCancel","preventDefault","dispatch","type","payload","render","width","marginLeft","marginRight","color","fontFamily","display","padding","margin","background"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\n// import components\nimport Nav from '../../Nav/Nav.js';\nimport ScrollingFooter from '../../ScrollingFooter/ScrollingFooter';\n// import material ui\nimport { Button, Card, TextField, Typography } from '@material-ui/core';\n// import sweet alert\nimport swal from 'sweetalert';\n// import css\nimport './SubmitSteps.css';\n\nclass SubmitSteps extends Component {\n  state = {\n    steps: '',\n    date: '',\n  };\n\n  // validation function \n  confirmationSubmitSteps = (event) => {\n    if(this.state.steps === ''){\n      swal(`Please enter steps`);\n    }\n    else if(this.state.date === ''){\n      swal(`Please select a date`);\n    }\n    else{\n      swal({\n        title: \"Is the submitted information correct?\",\n        text: `Steps: ${this.state.steps} \n            Date: ${this.state.date.split( 'T' )[0]}`,\n        icon: \"info\",\n        buttons: {\n          cancel: \"No\",\n          yes: true,\n        }\n      }).then(isCorrect => {\n        if(isCorrect){\n          this.submitSteps(event);\n          swal({\n            title: \"You're steps have been logged!\",\n            icon: \"success\"\n          }).then(() => {\n            this.props.history.goBack();\n          })\n        }\n        else{\n          swal(`No steps were logged`)\n        }\n      })\n    }\n  };\n\n  handleChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  // function sets steps and date to empty strings and sends user back.\n  handleCancel = () => {\n    this.setState({\n      steps: '',\n      date: '',\n    });\n    this.props.history.goBack();\n  };\n\n  // function sends step creation data to saga listening for CREATE_STEPS\n  submitSteps = (event) => {\n    event.preventDefault();\n    this.props.dispatch({\n      type: 'CREATE_STEPS',\n      payload: {\n        steps: this.state.steps,\n        date: this.state.date,\n      },\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Nav />\n        <div>\n          <center>\n            <div className='submitStepsSection'>\n              <Card style={{width: '300px', marginLeft: 'auto', marginRight: 'auto'}}>\n                <div className='submitStepsHeadline'>\n                  <Typography style={{color: '#4d4d4f', fontFamily: 'Poppins'}} variant='h5'>Submit Steps</Typography>\n                </div>\n                <div className='submitStepsInput'>\n                  <TextField id=\"outlined-basic\" type=\"number\" label=\"Number of steps\" variant=\"outlined\" onChange={this.handleChangeFor('steps')}></TextField>\n                </div>\n                <div className='dateInputField'>\n                  <input \n                    style={{display: 'block', width: 175, color: 'rgb(118, 118, 118)', padding: '10px'}} \n                    type=\"date\" \n                    value={this.state.date} \n                    id=\"date\" \n                    name=\"date\"\n                    onChange={this.handleChangeFor('date')}>\n                  </input>\n                </div>      \n              </Card>\n            </div>\n            <div className='stepsSubmitCancelBtns'>\n              <Button \n                variant='contained' \n                color='default'\n                size= 'large'\n                style={{margin: '.5rem'}}\n                onClick={this.handleCancel}>\n                  Cancel\n              </Button>    \n              <Button \n                variant='contained' \n                color='primary'\n                size= 'large'\n                style={{margin: '.5rem', color: 'white', background: '#054f95'}}\n                onClick={this.confirmationSubmitSteps}>\n                  Submit\n              </Button>\n            </div>\n          </center>\n        </div>\n        <ScrollingFooter />\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(withRouter(SubmitSteps));"]},"metadata":{},"sourceType":"module"}