{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/User/EditUserLogs/EditUserLogs.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../../redux/mapStoreToProps'; // import axios\n\nimport axios from 'axios'; // import components\n\nimport EditUserSteps from './EditUserSteps.js';\nimport Nav from '../../Nav/Nav.js';\nimport ScrollingFooter from '../../ScrollingFooter/ScrollingFooter'; // import sweet alert\n\nimport swal from 'sweetalert'; // import material ui\n\nimport { Button, Typography } from \"@material-ui/core\"; // import css \n\nimport './EditUserLogs.css';\n\nclass EditUserLogs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      steps: 0\n    };\n\n    this.deleteTeammate = () => {\n      swal('this button', {\n        title: 'Would you like to delete the user?',\n        text: 'This cannot be undone',\n        icon: 'warning',\n        buttons: true,\n        dangerMode: true\n      }).then(willDelete => {\n        if (willDelete) {\n          this.props.dispatch({\n            type: 'DELETE_USER',\n            payload: this.props.store.currentPerson\n          });\n          swal(\"Teammate deleted\", {\n            icon: \"success\"\n          }).then(() => {\n            this.goBack();\n          });\n        } else {\n          swal(\"Keep on stepping!\");\n        }\n      });\n    };\n\n    this.saveStepLogChanges = logId => {\n      let newSteps = this.state.steps;\n      axios({\n        method: 'PUT',\n        url: `/api/logs/${logId}`,\n        data: {\n          steps: newSteps\n        }\n      });\n    };\n\n    this.deleteLog = value => {\n      swal('this button', {\n        title: 'Would you like to delete this log?',\n        text: 'This cannot be undone',\n        icon: 'warning',\n        buttons: true,\n        dangerMode: true\n      }).then(willDelete => {\n        if (willDelete) {\n          swal(\"Log deleted\", {\n            icon: \"success\"\n          }).then( // deletes the selected log\n          axios({\n            method: 'DELETE',\n            url: '/api/logs/',\n            data: {\n              id: value\n            }\n          }), // refreshed the log table\n          this.props.dispatch({\n            type: 'FETCH_LOGS',\n            payload: this.props.store.currentPerson\n          }));\n        } else {\n          swal(\"Keep on stepping!\");\n        }\n      });\n    };\n\n    this.goBack = () => {\n      this.props.history.push('/team');\n    };\n\n    this.edit = event => {\n      this.setState({\n        steps: event.target.value\n      });\n    };\n\n    this.reload = () => {\n      this.props.dispatch({\n        type: 'FETCH_LOGS',\n        payload: this.props.store.currentPerson\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editUserLogsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editUserLogHeader\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: '#4d4d4f',\n              fontFamily: 'Poppins'\n            },\n            variant: \"h4\",\n            children: [this.props.store.userLogs[0] && this.props.store.userLogs[0].first_name, \" \", this.props.store.userLogs[0] && this.props.store.userLogs[0].last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"leaderboardTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: \"Time Submitted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: \"Steps\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.props.store.userLogs.map(log => /*#__PURE__*/_jsxDEV(EditUserSteps, {\n              date: log.date.split('T')[0],\n              data: log.id,\n              steps: log.steps,\n              changeStepLog: this.changeStepLog,\n              edit: this.edit,\n              delete: this.deleteLog,\n              save: this.saveStepLogChanges,\n              reload: this.reload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editUserBackandDeleteBtn\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editUserBackBtn\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            style: {\n              color: 'white',\n              background: '#054f95'\n            },\n            onClick: this.goBack,\n            children: \"Finished Editing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editUserBackandDeleteBtn\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: () => this.deleteTeammate(),\n          children: \"Delete User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollingFooter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(mapStoreToProps)(EditUserLogs);","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/User/EditUserLogs/EditUserLogs.js"],"names":["React","Component","connect","mapStoreToProps","axios","EditUserSteps","Nav","ScrollingFooter","swal","Button","Typography","EditUserLogs","state","steps","deleteTeammate","title","text","icon","buttons","dangerMode","then","willDelete","props","dispatch","type","payload","store","currentPerson","goBack","saveStepLogChanges","logId","newSteps","method","url","data","deleteLog","value","id","history","push","edit","event","setState","target","reload","render","color","fontFamily","userLogs","first_name","last_name","map","log","date","split","changeStepLog","background"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\n// import axios\nimport axios from 'axios';\n// import components\nimport EditUserSteps from './EditUserSteps.js';\nimport Nav from '../../Nav/Nav.js';\nimport ScrollingFooter from '../../ScrollingFooter/ScrollingFooter';\n// import sweet alert\nimport swal from 'sweetalert';\n// import material ui\nimport { Button, Typography } from \"@material-ui/core\";\n// import css \nimport './EditUserLogs.css';\n\nclass EditUserLogs extends Component {\n  state = {\n    steps: 0\n  };\n\n  // allows captain to delete teammates\n  deleteTeammate = () => {\n    swal('this button', {\n      title: 'Would you like to delete the user?',\n      text: 'This cannot be undone',\n      icon: 'warning',\n      buttons: true,\n      dangerMode: true\n    })\n    .then((willDelete) => {\n      if(willDelete) {\n        this.props.dispatch({\n          type: 'DELETE_USER',\n          payload: this.props.store.currentPerson\n        });\n        swal(\"Teammate deleted\", {\n          icon: \"success\"\n        })\n        .then(() => {\n          this.goBack();\n        })\n      } else {\n        swal(\"Keep on stepping!\");\n      }\n    });\n  };\n\n  // pulls id and steps from child editUserSteps to update step logs\n  saveStepLogChanges = (logId) => {\n    let newSteps = this.state.steps;\n    axios({\n      method: 'PUT',\n      url: `/api/logs/${logId}`,\n      data: {steps: newSteps}\n    });\n  };\n\n  // delete log sweet alert\n  // allows captain to cancel the log deletion\n  deleteLog = (value) => {\n    swal('this button', {\n      title: 'Would you like to delete this log?',\n      text: 'This cannot be undone',\n      icon: 'warning',\n      buttons: true,\n      dangerMode: true\n    })\n    .then((willDelete) => {\n      if(willDelete) {\n        swal(\"Log deleted\", {\n          icon: \"success\"\n        })\n        .then(\n          // deletes the selected log\n          axios({\n            method: 'DELETE',\n            url:'/api/logs/',\n            data: {\n              id: value\n            }\n          }),\n          // refreshed the log table\n          this.props.dispatch({\n            type: 'FETCH_LOGS',\n            payload: this.props.store.currentPerson\n          })\n        )\n      } else {\n        swal(\"Keep on stepping!\");\n      }\n    })\n  };\n\n  // Function pushes user back to previous page.\n  goBack = () => {\n    this.props.history.push('/team');\n  };\n\n  // sets local state to changed step log\n  edit = (event) => {\n    this.setState({\n      steps: event.target.value\n    });\n  };\n\n  reload = () => {\n    this.props.dispatch({\n      type: 'FETCH_LOGS',\n      payload: this.props.store.currentPerson\n    })\n  };\n\n  render() {\n    return (\n      <div className='editUserLogsContainer'>\n        <Nav />\n          <center>\n          <div className='editUserLogHeader'>\n            <Typography style={{color: '#4d4d4f', fontFamily: 'Poppins'}} variant='h4'>\n              {this.props.store.userLogs[0] && this.props.store.userLogs[0].first_name} {this.props.store.userLogs[0] && this.props.store.userLogs[0].last_name}\n            </Typography>\n          </div>\n          <table id='leaderboardTable'>\n            <thead>\n              <tr>\n                <th><Typography variant='body1'>Time Submitted</Typography></th>\n                <th><Typography variant='body1'>Steps</Typography></th>\n                <th></th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.store.userLogs.map(log =>\n                <EditUserSteps\n                  date={log.date.split( 'T' )[0]}\n                  data={log.id}\n                  steps={log.steps}\n                  changeStepLog={this.changeStepLog}\n                  edit={this.edit}\n                  delete={this.deleteLog}\n                  save={this.saveStepLogChanges}\n                  reload={this.reload}\n                />\n              )}\n            </tbody>\n          </table>\n        </center>\n        <div className='editUserBackandDeleteBtn'>\n          <div className='editUserBackBtn'>\n            <Button variant=\"contained\" style={{color: 'white', background: '#054f95'}} onClick={this.goBack}>Finished Editing</Button> \n          </div>\n        </div>\n        <div className='editUserBackandDeleteBtn'>\n          <Button variant=\"contained\" color=\"secondary\" onClick={()=> this.deleteTeammate()}>Delete User</Button>\n        </div>\n        <ScrollingFooter/>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(EditUserLogs);"]},"metadata":{},"sourceType":"module"}