{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/Adopt/AdoptionTabs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Button, Tabs, Tab, AppBar } from \"@material-ui/core\";\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport './Adopt.css'; // Holds tabs for animal type selection\n\nfunction AdoptionTabs(props) {\n  _s();\n\n  // Selecting a different tab changes the animal type viewed\n  const [value, setValue] = useState(0);\n  const animalTypes = ['Cat', 'Dog', 'Rabbit', 'Snake', 'Hamster', 'Mouse', 'Pig', 'Other']; // starts the fetch saga which gets animals of selected type\n  // from the database\n\n  const handleChange = (event, newValue) => {\n    console.log('newValue', newValue);\n    let animalsToFind = animalTypes[newValue];\n    setValue(newValue);\n    props.dispatch({\n      type: 'FETCH_ANIMALS',\n      payload: animalsToFind\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    children: /*#__PURE__*/_jsxDEV(Tabs, {\n      value: value,\n      onChange: handleChange,\n      children: animalTypes.map(animal => /*#__PURE__*/_jsxDEV(Tab, {\n        label: animal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdoptionTabs, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\n_c = AdoptionTabs;\nexport default connect(mapStoreToProps)(AdoptionTabs);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdoptionTabs\");","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/Adopt/AdoptionTabs.js"],"names":["React","useState","connect","Grid","Button","Tabs","Tab","AppBar","mapStoreToProps","AdoptionTabs","props","value","setValue","animalTypes","handleChange","event","newValue","console","log","animalsToFind","dispatch","type","payload","map","animal"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,GAA7B,EAAkCC,MAAlC,QAAgD,mBAAhD;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAO,aAAP,C,CACA;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMY,WAAW,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf,EAAyB,OAAzB,EAAkC,SAAlC,EAA6C,OAA7C,EAAsD,KAAtD,EAA6D,OAA7D,CAApB,CAH2B,CAI3B;AACA;;AACA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACA,QAAIG,aAAa,GAAGN,WAAW,CAACG,QAAD,CAA/B;AACAJ,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACAN,IAAAA,KAAK,CAACU,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAE,eADO;AAEbC,MAAAA,OAAO,EAAEH;AAFI,KAAf;AAID,GARD;;AASA,sBACE,QAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,KAAK,EAAER,KADT;AAEE,MAAA,QAAQ,EAAEG,YAFZ;AAAA,gBAIKD,WAAW,CAACU,GAAZ,CAAgBC,MAAM,iBACrB,QAAC,GAAD;AAAK,QAAA,KAAK,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,cADD;AAJL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA3BQf,Y;;KAAAA,Y;AA6BT,eAAeP,OAAO,CAACM,eAAD,CAAP,CAAyBC,YAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Button, Tabs, Tab, AppBar } from \"@material-ui/core\";\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport './Adopt.css';\n// Holds tabs for animal type selection\nfunction AdoptionTabs(props) {\n  // Selecting a different tab changes the animal type viewed\n  const [value, setValue] = useState(0);\n  const animalTypes = ['Cat', 'Dog', 'Rabbit', 'Snake', 'Hamster', 'Mouse', 'Pig', 'Other'];\n  // starts the fetch saga which gets animals of selected type\n  // from the database\n  const handleChange = (event, newValue) => {\n    console.log('newValue', newValue);\n    let animalsToFind = animalTypes[newValue]\n    setValue(newValue)\n    props.dispatch({\n      type: 'FETCH_ANIMALS',\n      payload: animalsToFind\n    })\n  };\n  return (\n    <AppBar position='static'>\n      <Tabs \n        value={value}\n        onChange={handleChange}\n        >\n          {animalTypes.map(animal =>\n            <Tab label={animal} />\n            )}\n        </Tabs>\n    </AppBar>\n  );\n}\n\nexport default connect(mapStoreToProps)(AdoptionTabs);"]},"metadata":{},"sourceType":"module"}