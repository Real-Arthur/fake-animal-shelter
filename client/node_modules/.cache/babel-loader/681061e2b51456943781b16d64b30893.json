{"ast":null,"code":"import { all, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios'; // Function sends delete request with photo_id then yield all with contest_id\n\nfunction* adminDeletePhotoSaga(action) {\n  let contest_id = action.payload.contest_id;\n  let photo_id = action.payload.photo_id;\n  yield axios({\n    method: 'DELETE',\n    url: `/api/adminphotos/${photo_id}`\n  });\n  yield all([put({\n    type: 'FETCH_CONTEST_DETAILS',\n    payload: contest_id\n  }), put({\n    type: 'FETCH_CONTEST_PHOTOS',\n    payload: contest_id\n  })]);\n}\n\n; // Function sends get request with contest id and puts that data into reducer listening for ADMIN_CONTEST\n\nfunction* fetchContestDetailsSaga(action) {\n  let contest_id = action.payload;\n  let response = yield axios({\n    method: 'GET',\n    url: `/api/contestDetails/${contest_id}`\n  });\n  yield put({\n    type: 'ADMIN_CONTEST',\n    payload: response.data\n  });\n}\n\n; // Function gets all photos for admin and puts them into reducer listening for ADMIN_PHOTOS\n\nfunction* fetchContestPhotosSaga(action) {\n  let contest_id = action.payload;\n  let response = yield axios({\n    method: 'GET',\n    url: `/api/adminphotos/${contest_id}`\n  });\n  yield put({\n    type: 'ADMIN_PHOTOS',\n    payload: response.data\n  });\n}\n\n;\n\nfunction* adminSaga() {\n  yield takeLatest('ADMIN_DELETE_PHOTO', adminDeletePhotoSaga);\n  yield takeLatest('FETCH_CONTEST_DETAILS', fetchContestDetailsSaga);\n  yield takeLatest('FETCH_CONTEST_PHOTOS', fetchContestPhotosSaga);\n}\n\n;\nexport default adminSaga;","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/redux/sagas/admin.saga.js"],"names":["all","put","takeLatest","axios","adminDeletePhotoSaga","action","contest_id","payload","photo_id","method","url","type","fetchContestDetailsSaga","response","data","fetchContestPhotosSaga","adminSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,UAAnB,QAAqC,oBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,UAAUC,oBAAV,CAA+BC,MAA/B,EAAsC;AACpC,MAAIC,UAAU,GAAGD,MAAM,CAACE,OAAP,CAAeD,UAAhC;AACA,MAAIE,QAAQ,GAAGH,MAAM,CAACE,OAAP,CAAeC,QAA9B;AACA,QAAML,KAAK,CAAC;AACVM,IAAAA,MAAM,EAAE,QADE;AAEVC,IAAAA,GAAG,EAAG,oBAAmBF,QAAS;AAFxB,GAAD,CAAX;AAIA,QAAMR,GAAG,CAAC,CACRC,GAAG,CAAC;AAAEU,IAAAA,IAAI,EAAE,uBAAR;AAAiCJ,IAAAA,OAAO,EAAED;AAA1C,GAAD,CADK,EAERL,GAAG,CAAC;AAAEU,IAAAA,IAAI,EAAE,sBAAR;AAAgCJ,IAAAA,OAAO,EAAED;AAAzC,GAAD,CAFK,CAAD,CAAT;AAID;;AAAA,C,CAED;;AACA,UAAUM,uBAAV,CAAkCP,MAAlC,EAA0C;AACxC,MAAIC,UAAU,GAAGD,MAAM,CAACE,OAAxB;AACA,MAAIM,QAAQ,GAAG,MAAMV,KAAK,CAAC;AACzBM,IAAAA,MAAM,EAAE,KADiB;AAEzBC,IAAAA,GAAG,EAAG,uBAAsBJ,UAAW;AAFd,GAAD,CAA1B;AAIA,QAAML,GAAG,CAAC;AACRU,IAAAA,IAAI,EAAE,eADE;AAERJ,IAAAA,OAAO,EAAEM,QAAQ,CAACC;AAFV,GAAD,CAAT;AAID;;AAAA,C,CAED;;AACA,UAAUC,sBAAV,CAAiCV,MAAjC,EAAyC;AACvC,MAAIC,UAAU,GAAGD,MAAM,CAACE,OAAxB;AACA,MAAIM,QAAQ,GAAG,MAAMV,KAAK,CAAC;AACzBM,IAAAA,MAAM,EAAE,KADiB;AAEzBC,IAAAA,GAAG,EAAG,oBAAmBJ,UAAW;AAFX,GAAD,CAA1B;AAIA,QAAML,GAAG,CAAC;AACNU,IAAAA,IAAI,EAAE,cADA;AAENJ,IAAAA,OAAO,EAAEM,QAAQ,CAACC;AAFZ,GAAD,CAAT;AAID;;AAAA;;AAED,UAAUE,SAAV,GAAsB;AACpB,QAAMd,UAAU,CAAC,oBAAD,EAAuBE,oBAAvB,CAAhB;AACA,QAAMF,UAAU,CAAC,uBAAD,EAA0BU,uBAA1B,CAAhB;AACA,QAAMV,UAAU,CAAC,sBAAD,EAAyBa,sBAAzB,CAAhB;AACD;;AAAA;AAED,eAAeC,SAAf","sourcesContent":["import { all, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// Function sends delete request with photo_id then yield all with contest_id\nfunction* adminDeletePhotoSaga(action){\n  let contest_id = action.payload.contest_id;\n  let photo_id = action.payload.photo_id;\n  yield axios({\n    method: 'DELETE',\n    url: `/api/adminphotos/${photo_id}`\n  });\n  yield all([\n    put({ type: 'FETCH_CONTEST_DETAILS', payload: contest_id}),\n    put({ type: 'FETCH_CONTEST_PHOTOS', payload: contest_id}),\n  ]);\n};\n\n// Function sends get request with contest id and puts that data into reducer listening for ADMIN_CONTEST\nfunction* fetchContestDetailsSaga(action) {\n  let contest_id = action.payload;\n  let response = yield axios({\n    method: 'GET',\n    url: `/api/contestDetails/${contest_id}`,\n  });\n  yield put({\n    type: 'ADMIN_CONTEST',\n    payload: response.data\n  });\n};\n\n// Function gets all photos for admin and puts them into reducer listening for ADMIN_PHOTOS\nfunction* fetchContestPhotosSaga(action) {\n  let contest_id = action.payload;\n  let response = yield axios({\n    method: 'GET',\n    url: `/api/adminphotos/${contest_id}`,\n  });\n  yield put({\n      type: 'ADMIN_PHOTOS',\n      payload: response.data\n  });\n};\n\nfunction* adminSaga() {\n  yield takeLatest('ADMIN_DELETE_PHOTO', adminDeletePhotoSaga);\n  yield takeLatest('FETCH_CONTEST_DETAILS', fetchContestDetailsSaga);\n  yield takeLatest('FETCH_CONTEST_PHOTOS', fetchContestPhotosSaga);\n};\n  \nexport default adminSaga;"]},"metadata":{},"sourceType":"module"}