{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/Admin/ContestDescriptionPage/ContestDescriptionPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport './ContestDescriptionPage.css';\nimport Nav from '../../Nav/Nav.js';\nimport AdminContestImages from './AdminContestImages';\nimport { Typography } from '@material-ui/core';\nimport axios from 'axios';\nimport saveAs from 'file-saver'; // import sweetalert\n\nimport swal from 'sweetalert';\n\nclass ContestDescriptionPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.fetchDataDownloadCsv = () => {\n      axios({\n        method: 'POST',\n        url: '/api/admin',\n        data: {\n          contests_id: this.props.store.currentContest\n        }\n      }).then(result => {\n        const csvfile = new File([result.data], 'result.csv', {\n          type: \"text/plain;charset=utf-8\"\n        });\n        saveAs(csvfile);\n      }).catch(error => {\n        console.log('we have an error in fetchDataDownloadCSV', error);\n      });\n    };\n\n    this.confirmationClose = id => {\n      swal({\n        title: \"Are you sure you want to close this contest?\",\n        text: \"Once deleted it cannot be recovered.\",\n        icons: \"warning\",\n        buttons: true,\n        dangerMode: true\n      }).then(willDelete => {\n        if (willDelete) {\n          swal(\"Contest Successfully deleted!\", {\n            icon: \"success\"\n          });\n          this.closeContest(id);\n        } else {\n          swal(\"You're in luck, the contest wasn't deleted!\");\n        }\n      });\n    };\n\n    this.closeContest = id => {\n      console.log('this is id arg', id);\n      axios({\n        method: 'DELETE',\n        url: `/api/contest/${id}`\n      }).then(result => {\n        this.props.history.push('/adminhome');\n      }).catch(error => {\n        console.log('uh oh', error);\n      });\n    };\n\n    this.current = () => {\n      return this.props.store.currentContest - 1;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"adminContestDescriptionHeader\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: '#4d4d4f',\n              fontFamily: 'Poppins'\n            },\n            variant: \"h4\",\n            children: this.props.store.contest[this.current()] && this.props.store.contest[this.current()].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"adminContestDescriptionTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"Team Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"Team Captain\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"Company\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), this.props.store.adminContest.map((contest, i) => /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: contest.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [contest.first_name, \" \", contest.last_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: contest.company_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"csvDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"exportToCsvLink\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.fetchDataDownloadCsv,\n              children: \"Export Data To CSV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"closeContestBtn\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.confirmationClose(this.props.store.currentContest),\n              children: \"Close Contest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AdminContestImages, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(mapStoreToProps)(ContestDescriptionPage);","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/Admin/ContestDescriptionPage/ContestDescriptionPage.js"],"names":["React","Component","connect","mapStoreToProps","Nav","AdminContestImages","Typography","axios","saveAs","swal","ContestDescriptionPage","fetchDataDownloadCsv","method","url","data","contests_id","props","store","currentContest","then","result","csvfile","File","type","catch","error","console","log","confirmationClose","id","title","text","icons","buttons","dangerMode","willDelete","icon","closeContest","history","push","current","render","color","fontFamily","contest","name","adminContest","map","i","first_name","last_name","company_name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport './ContestDescriptionPage.css';\nimport Nav from '../../Nav/Nav.js';\nimport AdminContestImages from './AdminContestImages';\nimport { Typography } from '@material-ui/core';\nimport axios from 'axios';\nimport saveAs from 'file-saver';\n// import sweetalert\nimport swal from 'sweetalert';\n\nclass ContestDescriptionPage extends Component {\n  // function sends a post request with current contest id , gets data back in csv format and creates new file and downloads.\n  fetchDataDownloadCsv = () => {\n    axios({\n      method: 'POST',\n      url: '/api/admin',\n      data: {\n        contests_id: this.props.store.currentContest\n      }\n    }).then(result => {\n      const csvfile = new File([result.data], 'result.csv', {type: \"text/plain;charset=utf-8\"});\n      saveAs(csvfile);\n    }).catch(error => {\n      console.log('we have an error in fetchDataDownloadCSV', error);\n    });\n  };\n\n  // Created a function that is a validation function that takes in the argument which is the contests id\n  // if willDelete is true will run closeContest and pass contest id as arguement.\n  confirmationClose = (id) => {\n    swal({\n      title: \"Are you sure you want to close this contest?\",\n      text: \"Once deleted it cannot be recovered.\",\n      icons: \"warning\",\n      buttons: true,\n      dangerMode: true\n    })\n    .then(willDelete => {\n      if(willDelete){\n        swal(\"Contest Successfully deleted!\",{\n          icon: \"success\",\n        });\n        this.closeContest(id);\n      }\n      else {\n        swal(\"You're in luck, the contest wasn't deleted!\");\n      }\n    });\n  };\n\n  // Function sends a delete request to server upon success pushes user to adminhome\n  closeContest = (id) => {\n    console.log('this is id arg', id);\n    axios({\n      method: 'DELETE',\n      url: `/api/contest/${id}`\n    }).then(result => {\n      this.props.history.push('/adminhome');\n    }).catch(error => {\n      console.log('uh oh', error);\n    });\n  };\n\n  // uses currentContest to find by index of contest in contest array\n  // to show name of current contest\n  current = () => {\n    return this.props.store.currentContest - 1;\n  };\n\n  render() {\n    return (\n      <div >\n        <Nav/>\n        <center>\n        <div className='adminContestDescriptionHeader'>\n          <Typography style={{color: '#4d4d4f', fontFamily: 'Poppins'}} variant='h4'>{this.props.store.contest[this.current()] && this.props.store.contest[this.current()].name}</Typography>\n        </div>\n          <table className='adminContestDescriptionTable'>\n            <thead>\n              <tr>\n                <th><Typography variant='h6'>Team Name</Typography></th>\n                <th><Typography variant='h6'>Team Captain</Typography></th>\n                <th><Typography variant='h6'>Company</Typography></th>\n              </tr>\n            </thead>\n            {this.props.store.adminContest.map((contest, i) => \n              <tbody key={i}>\n                <tr>\n                  <td>{contest.name}</td>\n                  <td>{contest.first_name} {contest.last_name}</td>\n                  <td>{contest.company_name}</td>\n                </tr>\n              </tbody>\n              )}\n          </table>\n          <div className='csvDiv'>\n            <div className='exportToCsvLink'>\n              <button onClick={this.fetchDataDownloadCsv}>\n                Export Data To CSV\n              </button>\n            </div>\n            <div className='closeContestBtn'>\n              <button onClick={() => this.confirmationClose(this.props.store.currentContest)}>\n                Close Contest\n              </button>\n            </div>\n          </div>\n          <AdminContestImages />\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(ContestDescriptionPage);"]},"metadata":{},"sourceType":"module"}