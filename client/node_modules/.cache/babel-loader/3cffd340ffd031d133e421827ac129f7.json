{"ast":null,"code":"import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios'; // sends a post request with faq creation data and refetches FAQ with 'FETCH_FAQ'\n\nfunction* createFAQSaga(action) {\n  yield axios({\n    method: 'POST',\n    url: '/api/faq',\n    data: action.payload\n  });\n  yield put({\n    type: 'FETCH_FAQ'\n  });\n}\n\n; // Function fetches faq and puts them in reducer listening for SET_FAQ\n\nfunction* fetchFAQSaga() {\n  let response = yield axios.get(`/api/faq`);\n  yield put({\n    type: 'SET_FAQ',\n    payload: response.data\n  });\n}\n\n;\n\nfunction* faqSaga() {\n  yield takeLatest('CREATE_FAQ', createFAQSaga);\n  yield takeLatest('FETCH_FAQ', fetchFAQSaga);\n}\n\n;\nexport default faqSaga;","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/redux/sagas/faq.saga.js"],"names":["put","takeLatest","axios","createFAQSaga","action","method","url","data","payload","type","fetchFAQSaga","response","get","faqSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,oBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,UAAUC,aAAV,CAAwBC,MAAxB,EAAgC;AAC9B,QAAMF,KAAK,CAAC;AACVG,IAAAA,MAAM,EAAE,MADE;AAEVC,IAAAA,GAAG,EAAE,UAFK;AAGVC,IAAAA,IAAI,EAAEH,MAAM,CAACI;AAHH,GAAD,CAAX;AAKA,QAAMR,GAAG,CAAC;AACRS,IAAAA,IAAI,EAAE;AADE,GAAD,CAAT;AAGD;;AAAA,C,CAED;;AACA,UAAUC,YAAV,GAAwB;AACtB,MAAIC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,UAAX,CAArB;AACA,QAAMZ,GAAG,CAAC;AACRS,IAAAA,IAAI,EAAE,SADE;AAERD,IAAAA,OAAO,EAAEG,QAAQ,CAACJ;AAFV,GAAD,CAAT;AAID;;AAAA;;AAED,UAAUM,OAAV,GAAoB;AAChB,QAAMZ,UAAU,CAAC,YAAD,EAAeE,aAAf,CAAhB;AACA,QAAMF,UAAU,CAAC,WAAD,EAAcS,YAAd,CAAhB;AACH;;AAAA;AAED,eAAeG,OAAf","sourcesContent":["import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// sends a post request with faq creation data and refetches FAQ with 'FETCH_FAQ'\nfunction* createFAQSaga(action) {\n  yield axios({\n    method: 'POST',\n    url: '/api/faq',\n    data: action.payload\n  });\n  yield put({\n    type: 'FETCH_FAQ',\n  });\n};\n\n// Function fetches faq and puts them in reducer listening for SET_FAQ\nfunction* fetchFAQSaga(){\n  let response = yield axios.get(`/api/faq`);\n  yield put({\n    type: 'SET_FAQ',\n    payload: response.data\n  });\n};\n\nfunction* faqSaga() {\n    yield takeLatest('CREATE_FAQ', createFAQSaga);\n    yield takeLatest('FETCH_FAQ', fetchFAQSaga);\n};\n\nexport default faqSaga;"]},"metadata":{},"sourceType":"module"}