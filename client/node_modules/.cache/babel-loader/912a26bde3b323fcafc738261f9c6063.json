{"ast":null,"code":"import { combineReducers } from 'redux';\nimport adminContest from './adminContest.reducer';\nimport adminPhotos from './adminPhotos.reducer';\nimport challenges from './challenges.reducer';\nimport challengePhotos from './challengephotos.reducer';\nimport contest from './contest.reducer';\nimport currentPerson from './current.person.reducer';\nimport currentContest from './current.contest.reducer';\nimport dailyChallenges from './dailychallenge.reducer';\nimport errors from './errors.reducer';\nimport faq from './faq.reducer';\nimport leaderBoard from './leaderboard.reducer';\nimport photos from './photos.reducer';\nimport rules from './rules.reducer';\nimport teamDetails from './teamdetails.reducer';\nimport teams from './teams.reducer';\nimport teamsOnly from './teamsOnly.reducer';\nimport teamPhotos from './teamphotos.reducer';\nimport topSteppers from './topsteppers.reducer';\nimport user from './user.reducer';\nimport userLogs from './logs.reducer'; // rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\n\nconst rootReducer = combineReducers({\n  adminContest,\n  // Listens for 'ADMIN_CONTEST'\n  adminPhotos,\n  // Listens for 'ADMIN_PHOTOS'\n  challenges,\n  // Listens for 'SET_CHALLENGES'\n  challengePhotos,\n  // Listens for 'SET_CHALLENGE_PHOTOS'\n  contest,\n  // Listens for 'SET_CONTEST'\n  currentContest,\n  // Listens for 'SET_CURRENT_CONTEST'\n  currentPerson,\n  // Listens for 'SET_CURRENT_PERSON'\n  dailyChallenges,\n  // Listens for 'SET_DAILY_CHALLENGE'\n  errors,\n  // contains registrationMessage and loginMessage\n  faq,\n  // Listens for 'SET_FAQ'\n  leaderBoard,\n  // Listens for 'SET_LEADER_BOARD'\n  photos,\n  // Listens for 'SET_PHOTOS'\n  rules,\n  // Listens for 'SET_RULES'\n  teamDetails,\n  // Listens for 'SET_TEAM_DETAILS'\n  teams,\n  // Listens for 'SET_CAPTAINS_SEARCH' or 'SET_TEAMS_SEARCH'\n  teamsOnly,\n  // Listens for 'SET_TEAMS_ONLY'\n  teamPhotos,\n  // Listens for 'SET_CAPTAIN_TEAM_PHOTOS' or 'SET_USER_TEAM_PHOTOS'\n  topSteppers,\n  // Listens for 'SET_TOP_STEPPERS'\n  user,\n  // will have an id and username if someone is logged in\n  userLogs // Listens for 'SET_LOGS' or 'RESET_LOGS'\n\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/redux/reducers/_root.reducer.js"],"names":["combineReducers","adminContest","adminPhotos","challenges","challengePhotos","contest","currentPerson","currentContest","dailyChallenges","errors","faq","leaderBoard","photos","rules","teamDetails","teams","teamsOnly","teamPhotos","topSteppers","user","userLogs","rootReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,QAAP,MAAqB,gBAArB,C,CAEA;AACA;AACA;AAEA;AACA;;AACA,MAAMC,WAAW,GAAGrB,eAAe,CAAC;AAClCC,EAAAA,YADkC;AACZ;AACtBC,EAAAA,WAFkC;AAEZ;AACtBC,EAAAA,UAHkC;AAGZ;AACtBC,EAAAA,eAJkC;AAIZ;AACtBC,EAAAA,OALkC;AAKZ;AACtBE,EAAAA,cANkC;AAMZ;AACtBD,EAAAA,aAPkC;AAOZ;AACtBE,EAAAA,eARkC;AAQZ;AACtBC,EAAAA,MATkC;AASZ;AACtBC,EAAAA,GAVkC;AAUZ;AACtBC,EAAAA,WAXkC;AAWZ;AACtBC,EAAAA,MAZkC;AAYZ;AACtBC,EAAAA,KAbkC;AAaZ;AACtBC,EAAAA,WAdkC;AAcZ;AACtBC,EAAAA,KAfkC;AAeZ;AACtBC,EAAAA,SAhBkC;AAgBZ;AACtBC,EAAAA,UAjBkC;AAiBZ;AACtBC,EAAAA,WAlBkC;AAkBZ;AACtBC,EAAAA,IAnBkC;AAmBZ;AACtBC,EAAAA,QApBkC,CAoBZ;;AApBY,CAAD,CAAnC;AAuBA,eAAeC,WAAf","sourcesContent":["import { combineReducers } from 'redux';\nimport adminContest from './adminContest.reducer';\nimport adminPhotos from './adminPhotos.reducer';\nimport challenges from './challenges.reducer';\nimport challengePhotos from './challengephotos.reducer';\nimport contest from './contest.reducer';\nimport currentPerson from './current.person.reducer';\nimport currentContest from './current.contest.reducer';\nimport dailyChallenges from './dailychallenge.reducer';\nimport errors from './errors.reducer';\nimport faq from './faq.reducer';\nimport leaderBoard from './leaderboard.reducer';\nimport photos from './photos.reducer';\nimport rules from './rules.reducer';\nimport teamDetails from './teamdetails.reducer';\nimport teams from './teams.reducer';\nimport teamsOnly from './teamsOnly.reducer';\nimport teamPhotos from './teamphotos.reducer';\nimport topSteppers from './topsteppers.reducer';\nimport user from './user.reducer';\nimport userLogs from './logs.reducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  adminContest,         // Listens for 'ADMIN_CONTEST'\n  adminPhotos,          // Listens for 'ADMIN_PHOTOS'\n  challenges,           // Listens for 'SET_CHALLENGES'\n  challengePhotos,      // Listens for 'SET_CHALLENGE_PHOTOS'\n  contest,              // Listens for 'SET_CONTEST'\n  currentContest,       // Listens for 'SET_CURRENT_CONTEST'\n  currentPerson,        // Listens for 'SET_CURRENT_PERSON'\n  dailyChallenges,      // Listens for 'SET_DAILY_CHALLENGE'\n  errors,               // contains registrationMessage and loginMessage\n  faq,                  // Listens for 'SET_FAQ'\n  leaderBoard,          // Listens for 'SET_LEADER_BOARD'\n  photos,               // Listens for 'SET_PHOTOS'\n  rules,                // Listens for 'SET_RULES'\n  teamDetails,          // Listens for 'SET_TEAM_DETAILS'\n  teams,                // Listens for 'SET_CAPTAINS_SEARCH' or 'SET_TEAMS_SEARCH'\n  teamsOnly,            // Listens for 'SET_TEAMS_ONLY'\n  teamPhotos,           // Listens for 'SET_CAPTAIN_TEAM_PHOTOS' or 'SET_USER_TEAM_PHOTOS'\n  topSteppers,          // Listens for 'SET_TOP_STEPPERS'\n  user,                 // will have an id and username if someone is logged in\n  userLogs,             // Listens for 'SET_LOGS' or 'RESET_LOGS'\n});\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}