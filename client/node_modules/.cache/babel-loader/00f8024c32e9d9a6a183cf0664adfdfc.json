{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/Admin/ChallengesGridItem/ChallengeDataBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport ChallengeDateItem from './ChallengeDateItem';\nimport ChallengeTitleItem from './ChallengeTitleItem';\nimport ChallengeDescriptionItem from './ChallengeDescriptionItem';\nimport '../ChallengesGrid/ChallengesGrid.css';\nimport { Typography, Button } from \"@material-ui/core\"; // function component that holds child component that provide\n// title, description, and date of challenge\n\nfunction ChallengeDataBox(props) {\n  _s();\n\n  // toggles edit status of child functions\n  const [editable, isEditable] = useState(true); // sets initial values for title, description, and date\n\n  const [initialTitle] = useState(props.challenge.name);\n  const [initialDescription] = useState(props.challenge.description);\n  const [date, isDate] = useState(props.challenge.date); // handles change for challenge info\n\n  const [title, isTitle] = useState(props.challenge.name);\n  const [description, isDescription] = useState(props.challenge.description);\n  const [initialDate] = useState(props.challenge.date); // saves changes to challenges and toggles back to not able to edit\n\n  const save = () => {\n    props.dispatch({\n      type: 'UPDATE_CHALLENGE',\n      payload: {\n        id: props.challenge.id,\n        title: title,\n        description: description,\n        date: date\n      }\n    });\n    isEditable(!editable);\n  }; // cancels changes and toggles back to not able to edit\n\n\n  const cancel = () => {\n    isTitle(initialTitle);\n    isDescription(initialDescription);\n    isDate(initialDate);\n    isEditable(!editable);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: editable ? null : 'editAdminChallengeField',\n      variant: \"h5\",\n      children: /*#__PURE__*/_jsxDEV(ChallengeTitleItem, {\n        title: props.challenge.name,\n        status: editable,\n        isTitle: isTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: editable ? null : 'adminEditChallengeDate',\n      children: /*#__PURE__*/_jsxDEV(ChallengeDateItem, {\n        date: props.challenge.date,\n        status: editable,\n        isDate: isDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: editable ? null : 'editAdminChallengeField',\n      variant: \"body2\",\n      children: /*#__PURE__*/_jsxDEV(ChallengeDescriptionItem, {\n        description: props.challenge.description,\n        status: editable,\n        isDescription: isDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adminEditChallengeBtn\",\n      children: editable && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        size: \"large\",\n        onClick: () => isEditable(!editable),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), !editable && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adminEditChallengeSaveCancelBtnGroup\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        size: \"large\",\n        onClick: () => cancel(),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        style: {\n          color: 'white',\n          background: '#054f95',\n          marginLeft: '30px'\n        },\n        onClick: () => save(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengeDataBox, \"BGBC2FP3xoTu60m3naG8ryjyvrM=\");\n\n_c = ChallengeDataBox;\nexport default connect(mapStoreToProps)(ChallengeDataBox);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengeDataBox\");","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/Admin/ChallengesGridItem/ChallengeDataBox.js"],"names":["React","useState","connect","mapStoreToProps","ChallengeDateItem","ChallengeTitleItem","ChallengeDescriptionItem","Typography","Button","ChallengeDataBox","props","editable","isEditable","initialTitle","challenge","name","initialDescription","description","date","isDate","title","isTitle","isDescription","initialDate","save","dispatch","type","payload","id","cancel","color","background","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport ChallengeDateItem from './ChallengeDateItem';\nimport ChallengeTitleItem from './ChallengeTitleItem';\nimport ChallengeDescriptionItem from './ChallengeDescriptionItem';\nimport '../ChallengesGrid/ChallengesGrid.css';\nimport { Typography, Button } from \"@material-ui/core\";\n\n// function component that holds child component that provide\n// title, description, and date of challenge\nfunction ChallengeDataBox(props) {\n// toggles edit status of child functions\n  const [editable, isEditable] = useState(true);\n// sets initial values for title, description, and date\n  const [initialTitle] = useState(props.challenge.name);\n  const [initialDescription] = useState(props.challenge.description);\n  const [date, isDate] = useState(props.challenge.date);\n// handles change for challenge info\n  const [title, isTitle] = useState(props.challenge.name);\n  const [description, isDescription] = useState(props.challenge.description);\n  const [initialDate] = useState(props.challenge.date);\n// saves changes to challenges and toggles back to not able to edit\n  const save = () => {\n    props.dispatch({\n      type: 'UPDATE_CHALLENGE',\n      payload: {\n        id: props.challenge.id,\n        title: title,\n        description: description,\n        date: date\n      }\n    })\n    isEditable(!editable);\n  }\n// cancels changes and toggles back to not able to edit\n  const cancel = () => {\n    isTitle(initialTitle);\n    isDescription(initialDescription);\n    isDate(initialDate);\n    isEditable(!editable);\n  }\n  return (\n    <div>\n      <Typography className={editable ? null : 'editAdminChallengeField' } variant=\"h5\">\n        <ChallengeTitleItem \n          title={props.challenge.name}\n          status={editable}\n          isTitle={isTitle}\n        />\n      </Typography >\n\n      <div className={editable ? null : 'adminEditChallengeDate'}>\n        <ChallengeDateItem \n          date={props.challenge.date}\n          status={editable}\n          isDate={isDate}\n        />    \n      </div>\n\n      <Typography className={editable ? null : 'editAdminChallengeField' } variant=\"body2\">\n        <ChallengeDescriptionItem \n          description={props.challenge.description}\n          status={editable}\n          isDescription={isDescription}\n        />\n      </Typography>\n\n      <div className='adminEditChallengeBtn'>\n        {editable && \n        <Button variant='contained' \n          color='default'\n          size= 'large'\n          onClick={() => isEditable(!editable)}>Edit\n        </Button>\n        }   \n      </div>\n      {!editable &&\n      <div className='adminEditChallengeSaveCancelBtnGroup'>\n        <Button variant='contained' color='default' size= 'large'\n          onClick={() => cancel()}>\n            Cancel\n        </Button>\n        <Button variant='contained' color='primary' size= 'large'\n          style={{color: 'white', background: '#054f95', marginLeft: '30px'}} \n          onClick={() => save()}>\n            Save\n        </Button>\n      </div>\n      }\n    </div>\n  );\n}\n\nexport default connect(mapStoreToProps)(ChallengeDataBox);"]},"metadata":{},"sourceType":"module"}