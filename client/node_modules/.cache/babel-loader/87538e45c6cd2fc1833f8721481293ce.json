{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport rootReducer from './redux/reducers/_root.reducer'; // imports ./redux/reducers/index.js\n\nimport rootSaga from './redux/sagas/_root.saga'; // imports ./redux/sagas/index.js\n\nconst sagaMiddleware = createSagaMiddleware(); // this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\n\nconst middlewareList = process.env.NODE_ENV === 'development' ? [sagaMiddleware, logger] : [sagaMiddleware];\nconst store = createStore( // tells the saga middleware to use the rootReducer\n// rootSaga contains all of our other reducers\nrootReducer, // adds all middleware to our project including saga and logger\napplyMiddleware(...middlewareList)); // tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\n\nsagaMiddleware.run(rootSaga);\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 3\n}, this), document.getElementById('root-react')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/index.js"],"names":["React","ReactDOM","createStore","applyMiddleware","Provider","createSagaMiddleware","logger","App","reportWebVitals","rootReducer","rootSaga","sagaMiddleware","middlewareList","process","env","NODE_ENV","store","run","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,OAAOC,WAAP,MAAwB,gCAAxB,C,CAA0D;;AAC1D,OAAOC,QAAP,MAAqB,0BAArB,C,CAAiD;;AAGjD,MAAMC,cAAc,GAAGN,oBAAoB,EAA3C,C,CACA;AACA;AACA;;AACA,MAAMO,cAAc,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACrB,CAACJ,cAAD,EAAiBL,MAAjB,CADqB,GAErB,CAACK,cAAD,CAFF;AAIA,MAAMK,KAAK,GAAGd,WAAW,EACvB;AACA;AACAO,WAHuB,EAIvB;AACAN,eAAe,CAAC,GAAGS,cAAJ,CALQ,CAAzB,C,CAOA;AACA;;AACAD,cAAc,CAACM,GAAf,CAAmBP,QAAnB;AAGAT,QAAQ,CAACiB,MAAT,eACE,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEG,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAJF,E,CAOA;AACA;AACA;;AACAZ,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport rootReducer from './redux/reducers/_root.reducer'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas/_root.saga'; // imports ./redux/sagas/index.js\n\n\nconst sagaMiddleware = createSagaMiddleware();\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root-react')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}