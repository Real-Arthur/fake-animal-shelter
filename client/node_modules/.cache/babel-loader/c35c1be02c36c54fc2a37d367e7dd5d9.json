{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/User/Rules/Rules.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport { Document, Page, pdfjs } from 'react-pdf'; // import components\n\nimport FAQ from '../../User/FAQ/FAQ';\nimport Nav from '../../Nav/Nav.js';\nimport ScrollingFooter from '../../ScrollingFooter/ScrollingFooter'; // import material ui\n\nimport { Grid, Typography } from \"@material-ui/core\";\n\nclass Rules extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      heading: 'Rules'\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'FETCH_RULES'\n    });\n    pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          alignItems: \"center\",\n          className: \"rulesFaq\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"userRulesHeader\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  color: '#4d4d4f',\n                  fontFamily: 'Poppins'\n                },\n                variant: \"h4\",\n                children: \"Rules\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), this.props.store.rules.map((rule, i) => /*#__PURE__*/_jsxDEV(Document, {\n            file: rule.file_url,\n            children: /*#__PURE__*/_jsxDEV(Page, {\n              pageNumber: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(FAQ, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollingFooter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(mapStoreToProps)(Rules);","map":{"version":3,"sources":["/Users/rthrcrsn/Documents/Projects/struggling-shelter/src/components/User/Rules/Rules.js"],"names":["React","Component","connect","mapStoreToProps","Document","Page","pdfjs","FAQ","Nav","ScrollingFooter","Grid","Typography","Rules","state","heading","componentDidMount","props","dispatch","type","GlobalWorkerOptions","workerSrc","version","render","color","fontFamily","store","rules","map","rule","i","file_url"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAAQC,QAAR,EAAkBC,IAAlB,EAAwBC,KAAxB,QAAoC,WAApC,C,CACA;;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,eAAP,MAA4B,uCAA5B,C,CACA;;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;;AAEA,MAAMC,KAAN,SAAoBX,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BY,KAD4B,GACpB;AACNC,MAAAA,OAAO,EAAE;AADH,KADoB;AAAA;;AAK5BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,QAAX,CAAoB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAApB;AACAZ,IAAAA,KAAK,CAACa,mBAAN,CAA0BC,SAA1B,GAAuC,2CAA0Cd,KAAK,CAACe,OAAQ,gBAA/F;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,SAAS,EAAC,QAA1B;AAAmC,UAAA,UAAU,EAAC,QAA9C;AAAuD,UAAA,SAAS,EAAC,UAAjE;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,iBAAf;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,KAAK,EAAE;AAACC,kBAAAA,KAAK,EAAE,SAAR;AAAmBC,kBAAAA,UAAU,EAAE;AAA/B,iBAAnB;AAA8D,gBAAA,OAAO,EAAC,IAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,EAMG,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,KAAjB,CAAuBC,GAAvB,CAA2B,CAACC,IAAD,EAAOC,CAAP,kBAC1B,QAAC,QAAD;AAAU,YAAA,IAAI,EAAED,IAAI,CAACE,QAArB;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,UAAU,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF,aAAoCD,CAApC;AAAA;AAAA;AAAA;AAAA,kBADD,CANH,eAYE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAkBE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AAjC2B;;AAoC9B,eAAe3B,OAAO,CAACC,eAAD,CAAP,CAAyBS,KAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport {Document, Page, pdfjs} from 'react-pdf';\n// import components\nimport FAQ from '../../User/FAQ/FAQ';\nimport Nav from '../../Nav/Nav.js';\nimport ScrollingFooter from '../../ScrollingFooter/ScrollingFooter';\n// import material ui\nimport { Grid, Typography } from \"@material-ui/core\";\n\nclass Rules extends Component {\n  state = {\n    heading: 'Rules',\n  };\n\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_RULES' });\n    pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n  }\n\n  render() {\n    return (\n      <div>\n        <Nav />\n        <div>\n          <Grid container direction=\"column\" alignItems=\"center\" className=\"rulesFaq\">\n            <Grid item>\n              <div className='userRulesHeader'>\n                <Typography style={{color: '#4d4d4f', fontFamily: 'Poppins'}} variant='h4'>Rules</Typography>\n              </div>\n            </Grid>\n            {this.props.store.rules.map((rule, i) => \n              <Document file={rule.file_url} key={i}> \n                <Page pageNumber={1}> \n                </Page>\n              </Document>\n            )}\n            <FAQ />\n          </Grid>\n        </div>\n        <ScrollingFooter />\n    </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(Rules);"]},"metadata":{},"sourceType":"module"}